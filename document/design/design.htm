<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=gb2312">
<meta name=Generator content="Microsoft Word 12 (filtered)">
<title>Metaq原理与应用</title>
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:宋体;
	panose-1:2 1 6 0 3 1 1 1 1 1;}
@font-face
	{font-family:黑体;
	panose-1:2 1 6 9 6 1 1 1 1 1;}
@font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Cambria;
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
@font-face
	{font-family:Candara;
	panose-1:2 14 5 2 3 3 3 2 2 4;}
@font-face
	{font-family:微软雅黑;
	panose-1:2 11 5 3 2 2 4 2 2 4;}
@font-face
	{font-family:"YaHei Consolas Hybrid";
	panose-1:2 11 5 3 2 2 4 2 2 4;}
@font-face
	{font-family:"Lucida Sans Unicode";
	panose-1:2 11 6 2 3 5 4 2 2 4;}
@font-face
	{font-family:"\@YaHei Consolas Hybrid";
	panose-1:2 11 5 3 2 2 4 2 2 4;}
@font-face
	{font-family:"\@微软雅黑";
	panose-1:2 11 5 3 2 2 4 2 2 4;}
@font-face
	{font-family:"\@宋体";
	panose-1:2 1 6 0 3 1 1 1 1 1;}
@font-face
	{font-family:"\@黑体";
	panose-1:2 1 6 9 6 1 1 1 1 1;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	font-size:10.5pt;
	font-family:"Candara","sans-serif";}
h1
	{mso-style-link:"标题 1 Char";
	margin-top:17.0pt;
	margin-right:0cm;
	margin-bottom:16.5pt;
	margin-left:21.6pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:-21.6pt;
	line-height:240%;
	page-break-after:avoid;
	font-size:16.0pt;
	font-family:"Candara","sans-serif";}
h2
	{mso-style-link:"标题 2 Char";
	margin-top:13.0pt;
	margin-right:0cm;
	margin-bottom:13.0pt;
	margin-left:28.8pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:-28.8pt;
	line-height:173%;
	page-break-after:avoid;
	font-size:16.0pt;
	font-family:"Cambria","serif";}
h3
	{mso-style-link:"标题 3 Char";
	margin-top:13.0pt;
	margin-right:0cm;
	margin-bottom:13.0pt;
	margin-left:36.0pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:-36.0pt;
	line-height:173%;
	page-break-after:avoid;
	font-size:16.0pt;
	font-family:"Candara","sans-serif";}
h4
	{mso-style-link:"标题 4 Char";
	margin-top:14.0pt;
	margin-right:0cm;
	margin-bottom:14.5pt;
	margin-left:43.2pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:-43.2pt;
	line-height:156%;
	page-break-after:avoid;
	font-size:14.0pt;
	font-family:"Candara","sans-serif";}
h5
	{mso-style-link:"标题 5 Char";
	margin-top:14.0pt;
	margin-right:0cm;
	margin-bottom:14.5pt;
	margin-left:50.4pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:-50.4pt;
	line-height:156%;
	page-break-after:avoid;
	font-size:14.0pt;
	font-family:"Candara","sans-serif";}
h6
	{mso-style-link:"标题 6 Char";
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.2pt;
	margin-left:57.6pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:-57.6pt;
	line-height:133%;
	page-break-after:avoid;
	font-size:12.0pt;
	font-family:"Cambria","serif";}
p.MsoHeading7, li.MsoHeading7, div.MsoHeading7
	{mso-style-link:"标题 7 Char";
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.2pt;
	margin-left:64.8pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:-64.8pt;
	line-height:133%;
	page-break-after:avoid;
	font-size:12.0pt;
	font-family:"Candara","sans-serif";
	font-weight:bold;}
p.MsoHeading8, li.MsoHeading8, div.MsoHeading8
	{mso-style-link:"标题 8 Char";
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.2pt;
	margin-left:72.0pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:-72.0pt;
	line-height:133%;
	page-break-after:avoid;
	font-size:12.0pt;
	font-family:"Cambria","serif";}
p.MsoHeading9, li.MsoHeading9, div.MsoHeading9
	{mso-style-link:"标题 9 Char";
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.2pt;
	margin-left:79.2pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:-79.2pt;
	line-height:133%;
	page-break-after:avoid;
	font-size:10.5pt;
	font-family:"Cambria","serif";}
p.MsoToc1, li.MsoToc1, div.MsoToc1
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	font-size:10.5pt;
	font-family:"Candara","sans-serif";}
p.MsoToc2, li.MsoToc2, div.MsoToc2
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:21.0pt;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	font-size:10.5pt;
	font-family:"Candara","sans-serif";}
p.MsoToc3, li.MsoToc3, div.MsoToc3
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:42.0pt;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	font-size:10.5pt;
	font-family:"Candara","sans-serif";}
p.MsoHeader, li.MsoHeader, div.MsoHeader
	{mso-style-link:"页眉 Char";
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:center;
	layout-grid-mode:char;
	border:none;
	padding:0cm;
	font-size:9.0pt;
	font-family:"Candara","sans-serif";}
p.MsoFooter, li.MsoFooter, div.MsoFooter
	{mso-style-link:"页脚 Char";
	margin:0cm;
	margin-bottom:.0001pt;
	layout-grid-mode:char;
	font-size:9.0pt;
	font-family:"Candara","sans-serif";}
p.MsoCaption, li.MsoCaption, div.MsoCaption
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	font-size:10.0pt;
	font-family:"Cambria","serif";}
p.MsoTitle, li.MsoTitle, div.MsoTitle
	{mso-style-link:"标题 Char";
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:21.0pt;
	text-align:center;
	text-indent:-21.0pt;
	font-size:16.0pt;
	font-family:"Cambria","serif";
	font-weight:bold;}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;}
p.MsoDocumentMap, li.MsoDocumentMap, div.MsoDocumentMap
	{mso-style-link:"文档结构图 Char";
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	font-size:9.0pt;
	font-family:宋体;}
p.MsoAcetate, li.MsoAcetate, div.MsoAcetate
	{mso-style-link:"批注框文本 Char";
	margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	font-size:9.0pt;
	font-family:"Candara","sans-serif";}
p.MsoNoSpacing, li.MsoNoSpacing, div.MsoNoSpacing
	{mso-style-link:"无间隔 Char";
	margin:0cm;
	margin-bottom:.0001pt;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph
	{margin:0cm;
	margin-bottom:.0001pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:21.0pt;
	font-size:10.5pt;
	font-family:"Candara","sans-serif";}
p.MsoTocHeading, li.MsoTocHeading, div.MsoTocHeading
	{margin-top:24.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	line-height:115%;
	page-break-after:avoid;
	font-size:14.0pt;
	font-family:"Cambria","serif";
	color:#365F91;
	font-weight:bold;}
span.Char
	{mso-style-name:"页眉 Char";
	mso-style-link:页眉;}
span.Char0
	{mso-style-name:"页脚 Char";
	mso-style-link:页脚;}
span.Char1
	{mso-style-name:"无间隔 Char";
	mso-style-link:无间隔;}
span.Char2
	{mso-style-name:"批注框文本 Char";
	mso-style-link:批注框文本;}
span.1Char
	{mso-style-name:"标题 1 Char";
	mso-style-link:"标题 1";
	font-family:"Candara","sans-serif";
	font-weight:bold;}
span.2Char
	{mso-style-name:"标题 2 Char";
	mso-style-link:"标题 2";
	font-family:"Cambria","serif";
	font-weight:bold;}
span.3Char
	{mso-style-name:"标题 3 Char";
	mso-style-link:"标题 3";
	font-family:"Candara","sans-serif";
	font-weight:bold;}
span.4Char
	{mso-style-name:"标题 4 Char";
	mso-style-link:"标题 4";
	font-family:"Candara","sans-serif";
	font-weight:bold;}
span.5Char
	{mso-style-name:"标题 5 Char";
	mso-style-link:"标题 5";
	font-family:"Candara","sans-serif";
	font-weight:bold;}
span.6Char
	{mso-style-name:"标题 6 Char";
	mso-style-link:"标题 6";
	font-family:"Cambria","serif";
	font-weight:bold;}
span.7Char
	{mso-style-name:"标题 7 Char";
	mso-style-link:"标题 7";
	font-family:"Candara","sans-serif";
	font-weight:bold;}
span.8Char
	{mso-style-name:"标题 8 Char";
	mso-style-link:"标题 8";
	font-family:"Cambria","serif";}
span.9Char
	{mso-style-name:"标题 9 Char";
	mso-style-link:"标题 9";
	font-family:"Cambria","serif";}
span.Char3
	{mso-style-name:"文档结构图 Char";
	mso-style-link:文档结构图;
	font-family:宋体;}
span.Char4
	{mso-style-name:"标题 Char";
	mso-style-link:标题;
	font-family:"Cambria","serif";
	font-weight:bold;}
 /* Page Definitions */
 @page WordSection1
	{size:595.3pt 841.9pt;
	margin:36.0pt 36.0pt 36.0pt 36.0pt;
	layout-grid:15.6pt;}
div.WordSection1
	{page:WordSection1;}
@page WordSection2
	{size:595.3pt 841.9pt;
	margin:36.0pt 36.0pt 36.0pt 36.0pt;
	layout-grid:15.6pt;}
div.WordSection2
	{page:WordSection2;}
@page WordSection3
	{size:595.3pt 841.9pt;
	margin:36.0pt 36.0pt 36.0pt 36.0pt;
	layout-grid:15.6pt;}
div.WordSection3
	{page:WordSection3;}
@page WordSection4
	{size:595.3pt 841.9pt;
	margin:36.0pt 36.0pt 36.0pt 36.0pt;
	layout-grid:15.6pt;}
div.WordSection4
	{page:WordSection4;}
 /* List Definitions */
 ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>

</head>

<body lang=ZH-CN link=blue vlink=purple style='text-justify-trim:punctuation'>

<div class=WordSection1 style='layout-grid:15.6pt'>

<div align=center>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0 width="100%"
 style='width:100.0%;border-collapse:collapse'>
 <tr style='height:144.0pt'>
  <td width="100%" valign=top style='width:100.0%;padding:0cm 5.4pt 0cm 5.4pt;
  height:144.0pt'>
  <p class=MsoNoSpacing align=center style='text-align:center'><span
  lang=EN-US style='font-family:"YaHei Consolas Hybrid","sans-serif";
  text-transform:uppercase'>&nbsp;</span></p>
  </td>
 </tr>
 <tr style='height:72.0pt'>
  <td width="100%" style='width:100.0%;border:none;border-bottom:solid #4F81BD 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:72.0pt'>
  <p class=MsoNoSpacing align=center style='text-align:center'><b><span
  lang=EN-US style='font-size:36.0pt;font-family:"Cambria","serif"'>Metaq</span></b><b><span
  style='font-size:36.0pt;font-family:"微软雅黑","sans-serif"'>原理与应用</span></b></p>
  </td>
 </tr>
 <tr style='height:36.0pt'>
  <td width="100%" style='width:100.0%;border:none;padding:0cm 5.4pt 0cm 5.4pt;
  height:36.0pt'>
  <p class=MsoNoSpacing align=center style='text-align:center'><span
  style='font-size:15.0pt;font-family:"微软雅黑","sans-serif"'>（针对</span><span
  lang=EN-US style='font-size:15.0pt;font-family:"Cambria","serif"'>2.X</span><span
  style='font-size:15.0pt;font-family:"微软雅黑","sans-serif"'>版本）</span></p>
  </td>
 </tr>
 <tr style='height:18.0pt'>
  <td width="100%" style='width:100.0%;padding:0cm 5.4pt 0cm 5.4pt;height:18.0pt'>
  <p class=MsoNoSpacing align=center style='text-align:center'><span
  lang=EN-US style='font-family:"YaHei Consolas Hybrid","sans-serif"'>&nbsp;</span></p>
  </td>
 </tr>
 <tr style='height:18.0pt'>
  <td width="100%" style='width:100.0%;padding:0cm 5.4pt 0cm 5.4pt;height:18.0pt'>
  <p class=MsoNoSpacing align=center style='text-align:center'><b><span
  style='font-family:"微软雅黑","sans-serif"'>誓嘉</span></b><b><span
  style='font-family:"Cambria","serif"'> </span></b><b><span style='font-family:
  "微软雅黑","sans-serif"'>兰生</span></b></p>
  </td>
 </tr>
 <tr style='height:18.0pt'>
  <td width="100%" style='width:100.0%;padding:0cm 5.4pt 0cm 5.4pt;height:18.0pt'>
  <p class=MsoNoSpacing align=center style='text-align:center'><span
  lang=EN-US style='font-family:"Cambria","serif"'>2013/1/13</span></p>
  </td>
 </tr>
</table>

</div>

<p class=MsoNoSpacing></p>

</div>

<span lang=EN-US style='font-size:11.0pt;font-family:"YaHei Consolas Hybrid","sans-serif"'><br
clear=all style='page-break-before:always'>
</span>

<div class=WordSection2 style='layout-grid:15.6pt'>

<p class=MsoNormal align=center style='text-align:center'><b><span
style='font-size:14.0pt;font-family:"微软雅黑","sans-serif"'>目录</span></b></p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc345873140"><span
style='font-family:"YaHei Consolas Hybrid","sans-serif"'>1</span><span
style='font-family:"Calibri","sans-serif";color:windowtext;text-decoration:
none'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='font-family:"微软雅黑","sans-serif"'><span lang=EN-US>前言</span></span><span
style='color:windowtext;display:none;text-decoration:none'>... </span><span
style='color:windowtext;display:none;text-decoration:none'>1</span></a></span></p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc345873141"><span
style='font-family:"YaHei Consolas Hybrid","sans-serif"'>2</span><span
style='font-family:"Calibri","sans-serif";color:windowtext;text-decoration:
none'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='font-family:"微软雅黑","sans-serif"'><span lang=EN-US>特别说明</span></span><span
style='color:windowtext;display:none;text-decoration:none'>... </span><span
style='color:windowtext;display:none;text-decoration:none'>1</span></a></span></p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc345873142">3<span
style='font-family:"Calibri","sans-serif";color:windowtext;text-decoration:
none'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='font-family:"微软雅黑","sans-serif"'><span lang=EN-US>专业术语</span></span><span
style='color:windowtext;display:none;text-decoration:none'>... </span><span
style='color:windowtext;display:none;text-decoration:none'>1</span></a></span></p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc345873143">4<span
style='font-family:"Calibri","sans-serif";color:windowtext;text-decoration:
none'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='font-family:"微软雅黑","sans-serif"'><span lang=EN-US>消息系统需要解决哪些问题？</span></span><span
style='color:windowtext;display:none;text-decoration:none'>... </span><span
style='color:windowtext;display:none;text-decoration:none'>3</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc345873144">4.1<span
style='font-family:"Calibri","sans-serif";color:windowtext;text-decoration:
none'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Publish/Subscribe<span
style='color:windowtext;display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>3</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc345873145">4.2<span
style='font-family:"Calibri","sans-serif";color:windowtext;text-decoration:
none'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Message Order<span
style='color:windowtext;display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>3</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc345873146">4.3<span
style='font-family:"Calibri","sans-serif";color:windowtext;text-decoration:
none'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='font-family:"微软雅黑","sans-serif"'><span lang=EN-US>消息过滤</span></span><span
style='color:windowtext;display:none;text-decoration:none'>... </span><span
style='color:windowtext;display:none;text-decoration:none'>4</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc345873147">4.4<span
style='font-family:"Calibri","sans-serif";color:windowtext;text-decoration:
none'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Message Priority<span
style='color:windowtext;display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>4</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc345873148">4.5<span
style='font-family:"Calibri","sans-serif";color:windowtext;text-decoration:
none'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Exactly And Only Once<span
style='color:windowtext;display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>4</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc345873149">4.6<span
style='font-family:"Calibri","sans-serif";color:windowtext;text-decoration:
none'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='font-family:"微软雅黑","sans-serif"'><span lang=EN-US>回溯消费</span></span><span
style='color:windowtext;display:none;text-decoration:none'>... </span><span
style='color:windowtext;display:none;text-decoration:none'>5</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc345873150">4.7<span
style='font-family:"Calibri","sans-serif";color:windowtext;text-decoration:
none'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Message Persistence<span
style='color:windowtext;display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>5</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc345873151">4.8<span
style='font-family:"Calibri","sans-serif";color:windowtext;text-decoration:
none'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Broker<span lang=EN-US
style='font-family:"微软雅黑","sans-serif"'><span lang=EN-US>的</span></span>Buffer<span
lang=EN-US style='font-family:"微软雅黑","sans-serif"'><span lang=EN-US>满了怎么办？</span></span><span
style='color:windowtext;display:none;text-decoration:none'>... </span><span
style='color:windowtext;display:none;text-decoration:none'>5</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc345873152">4.9<span
style='font-family:"Calibri","sans-serif";color:windowtext;text-decoration:
none'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='font-family:"微软雅黑","sans-serif"'><span lang=EN-US>消息堆积</span></span><span
style='color:windowtext;display:none;text-decoration:none'>... </span><span
style='color:windowtext;display:none;text-decoration:none'>6</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc345873153">4.10<span
style='font-family:"Calibri","sans-serif";color:windowtext;text-decoration:
none'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Message Reliablity<span
style='color:windowtext;display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>7</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc345873154">4.11<span
style='font-family:"Calibri","sans-serif";color:windowtext;text-decoration:
none'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='font-family:"微软雅黑","sans-serif"'><span lang=EN-US>分布式事务</span></span><span
style='color:windowtext;display:none;text-decoration:none'>... </span><span
style='color:windowtext;display:none;text-decoration:none'>7</span></a></span></p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc345873155"><span
style='font-family:"YaHei Consolas Hybrid","sans-serif"'>5</span><span
style='font-family:"Calibri","sans-serif";color:windowtext;text-decoration:
none'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='font-family:"微软雅黑","sans-serif"'><span lang=EN-US>消息系统实现</span></span><span
style='color:windowtext;display:none;text-decoration:none'>... </span><span
style='color:windowtext;display:none;text-decoration:none'>8</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc345873156">5.1<span
style='font-family:"Calibri","sans-serif";color:windowtext;text-decoration:
none'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='font-family:"微软雅黑","sans-serif"'><span lang=EN-US>典型实现</span></span><span
style='color:windowtext;display:none;text-decoration:none'>... </span><span
style='color:windowtext;display:none;text-decoration:none'>8</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc345873157">5.2<span
style='font-family:"Calibri","sans-serif";color:windowtext;text-decoration:
none'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Apache Kafka<span
lang=EN-US style='font-family:"微软雅黑","sans-serif"'><span lang=EN-US>实现</span></span><span
style='color:windowtext;display:none;text-decoration:none'>... </span><span
style='color:windowtext;display:none;text-decoration:none'>8</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc345873158">5.3<span
style='font-family:"Calibri","sans-serif";color:windowtext;text-decoration:
none'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Push<span lang=EN-US
style='font-family:"微软雅黑","sans-serif"'><span lang=EN-US>和</span></span>Pull<span
style='color:windowtext;display:none;text-decoration:none'> </span><span
style='color:windowtext;display:none;text-decoration:none'>9</span></a></span></p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc345873159"><span
style='font-family:"YaHei Consolas Hybrid","sans-serif"'>6</span><span
style='font-family:"Calibri","sans-serif";color:windowtext;text-decoration:
none'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span style='font-family:
"YaHei Consolas Hybrid","sans-serif"'>Metaq Overview</span><span
style='color:windowtext;display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>10</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc345873160">6.1<span
style='font-family:"Calibri","sans-serif";color:windowtext;text-decoration:
none'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Metaq<span lang=EN-US
style='font-family:"微软雅黑","sans-serif"'><span lang=EN-US>与</span></span>Apache
Kafka<span lang=EN-US style='font-family:"微软雅黑","sans-serif"'><span lang=EN-US>的区别</span></span><span
style='color:windowtext;display:none;text-decoration:none'>... </span><span
style='color:windowtext;display:none;text-decoration:none'>10</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc345873161">6.2<span
style='font-family:"Calibri","sans-serif";color:windowtext;text-decoration:
none'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Metaq<span lang=EN-US
style='font-family:"微软雅黑","sans-serif"'><span lang=EN-US>是什么？</span></span><span
style='color:windowtext;display:none;text-decoration:none'>... </span><span
style='color:windowtext;display:none;text-decoration:none'>11</span></a></span></p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc345873162">7<span
style='font-family:"Calibri","sans-serif";color:windowtext;text-decoration:
none'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Metaq<span lang=EN-US
style='font-family:"微软雅黑","sans-serif"'><span lang=EN-US>主要功能点实现细节</span></span><span
style='color:windowtext;display:none;text-decoration:none'>... </span><span
style='color:windowtext;display:none;text-decoration:none'>12</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc345873163">7.1<span
style='font-family:"Calibri","sans-serif";color:windowtext;text-decoration:
none'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='font-family:"微软雅黑","sans-serif"'><span lang=EN-US>单机如何实现</span></span>1<span
lang=EN-US style='font-family:"微软雅黑","sans-serif"'><span lang=EN-US>万以上个队列</span></span><span
style='color:windowtext;display:none;text-decoration:none'>... </span><span
style='color:windowtext;display:none;text-decoration:none'>12</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc345873164">7.2<span
style='font-family:"Calibri","sans-serif";color:windowtext;text-decoration:
none'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='font-family:"微软雅黑","sans-serif"'><span lang=EN-US>刷盘策略</span></span><span
style='color:windowtext;display:none;text-decoration:none'>... </span><span
style='color:windowtext;display:none;text-decoration:none'>13</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc345873165">7.2.1<span
style='font-family:"Calibri","sans-serif";color:windowtext;text-decoration:
none'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='font-family:"微软雅黑","sans-serif"'><span lang=EN-US>异步刷盘</span></span><span
style='color:windowtext;display:none;text-decoration:none'>... </span><span
style='color:windowtext;display:none;text-decoration:none'>14</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc345873166">7.2.2<span
style='font-family:"Calibri","sans-serif";color:windowtext;text-decoration:
none'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='font-family:"微软雅黑","sans-serif"'><span lang=EN-US>同步刷盘</span></span><span
style='color:windowtext;display:none;text-decoration:none'>... </span><span
style='color:windowtext;display:none;text-decoration:none'>15</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc345873167">7.3<span
style='font-family:"Calibri","sans-serif";color:windowtext;text-decoration:
none'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='font-family:"微软雅黑","sans-serif"'><span lang=EN-US>服务器消息过滤</span></span><span
style='color:windowtext;display:none;text-decoration:none'>... </span><span
style='color:windowtext;display:none;text-decoration:none'>15</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc345873168">7.3.1<span
style='font-family:"Calibri","sans-serif";color:windowtext;text-decoration:
none'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
lang=EN-US style='font-family:"微软雅黑","sans-serif"'><span lang=EN-US>按照</span></span>Message
Type<span lang=EN-US style='font-family:"微软雅黑","sans-serif"'><span lang=EN-US>过滤</span></span><span
style='color:windowtext;display:none;text-decoration:none'>... </span><span
style='color:windowtext;display:none;text-decoration:none'>15</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc345873169">7.3.2<span
style='font-family:"Calibri","sans-serif";color:windowtext;text-decoration:
none'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='font-family:"微软雅黑","sans-serif"'><span lang=EN-US>按照</span></span>Message
Tag<span lang=EN-US style='font-family:"微软雅黑","sans-serif"'><span lang=EN-US>过滤</span></span><span
style='color:windowtext;display:none;text-decoration:none'>... </span><span
style='color:windowtext;display:none;text-decoration:none'>16</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc345873170">7.4<span
style='font-family:"Calibri","sans-serif";color:windowtext;text-decoration:
none'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='font-family:"微软雅黑","sans-serif"'><span lang=EN-US>消息查询</span></span><span
style='color:windowtext;display:none;text-decoration:none'>... </span><span
style='color:windowtext;display:none;text-decoration:none'>16</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc345873171">7.4.1<span
style='font-family:"Calibri","sans-serif";color:windowtext;text-decoration:
none'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='font-family:"微软雅黑","sans-serif"'><span lang=EN-US>按照</span></span>MessageId<span
lang=EN-US style='font-family:"微软雅黑","sans-serif"'><span lang=EN-US>查询消息</span></span><span
style='color:windowtext;display:none;text-decoration:none'>... </span><span
style='color:windowtext;display:none;text-decoration:none'>16</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc345873172">7.4.2<span
style='font-family:"Calibri","sans-serif";color:windowtext;text-decoration:
none'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='font-family:"微软雅黑","sans-serif"'><span lang=EN-US>按照时间查询队列</span></span>Offset<span
style='color:windowtext;display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>17</span></a></span></p>

<p class=MsoToc3><span lang=EN-US><a href="#_Toc345873173">7.4.3<span
style='font-family:"Calibri","sans-serif";color:windowtext;text-decoration:
none'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='font-family:"微软雅黑","sans-serif"'><span lang=EN-US>按照</span></span>Message
Key<span lang=EN-US style='font-family:"微软雅黑","sans-serif"'><span lang=EN-US>查询消息</span></span><span
style='color:windowtext;display:none;text-decoration:none'>... </span><span
style='color:windowtext;display:none;text-decoration:none'>18</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc345873174">7.5<span
style='font-family:"Calibri","sans-serif";color:windowtext;text-decoration:
none'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>HA<span lang=EN-US
style='font-family:"微软雅黑","sans-serif"'><span lang=EN-US>，同步双写</span></span><span
style='color:windowtext;display:none;text-decoration:none'>... </span><span
style='color:windowtext;display:none;text-decoration:none'>20</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc345873175">7.6<span
style='font-family:"Calibri","sans-serif";color:windowtext;text-decoration:
none'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>HA<span lang=EN-US
style='font-family:"微软雅黑","sans-serif"'><span lang=EN-US>，异步复制</span></span><span
style='color:windowtext;display:none;text-decoration:none'>... </span><span
style='color:windowtext;display:none;text-decoration:none'>20</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc345873176">7.7<span
style='font-family:"Calibri","sans-serif";color:windowtext;text-decoration:
none'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='font-family:"微软雅黑","sans-serif"'><span lang=EN-US>单个</span></span>JVM<span
lang=EN-US style='font-family:"微软雅黑","sans-serif"'><span lang=EN-US>进程也能利用机器超大内存</span></span><span
style='color:windowtext;display:none;text-decoration:none'>... </span><span
style='color:windowtext;display:none;text-decoration:none'>20</span></a></span></p>

<p class=MsoToc2><span lang=EN-US><a href="#_Toc345873177">7.8<span
style='font-family:"Calibri","sans-serif";color:windowtext;text-decoration:
none'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span lang=EN-US
style='font-family:"微软雅黑","sans-serif"'><span lang=EN-US>消息堆积问题<span
lang=EN-US>解决办法</span></span></span><span style='color:windowtext;display:none;
text-decoration:none'>... </span><span
style='color:windowtext;display:none;text-decoration:none'>21</span></a></span></p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc345873178">8<span
style='font-family:"Calibri","sans-serif";color:windowtext;text-decoration:
none'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Metaq<span lang=EN-US
style='font-family:"微软雅黑","sans-serif"'><span lang=EN-US>开发过程中遇到了哪些问题？</span></span><span
style='color:windowtext;display:none;text-decoration:none'>... </span><span
style='color:windowtext;display:none;text-decoration:none'>22</span></a></span></p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc345873179">9<span
style='font-family:"Calibri","sans-serif";color:windowtext;text-decoration:
none'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span>Metaq<span lang=EN-US
style='font-family:"微软雅黑","sans-serif"'><span lang=EN-US>目前有哪些地方需要改进？</span></span><span
style='color:windowtext;display:none;text-decoration:none'>... </span><span
style='color:windowtext;display:none;text-decoration:none'>22</span></a></span></p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc345873180">10<span
style='font-family:"Calibri","sans-serif";color:windowtext;text-decoration:
none'>&nbsp;&nbsp;&nbsp;&nbsp; </span>Metaq<span lang=EN-US style='font-family:
"微软雅黑","sans-serif"'><span lang=EN-US>的几个设<span lang=EN-US>计原则</span></span></span><span
style='color:windowtext;display:none;text-decoration:none'>... </span><span
style='color:windowtext;display:none;text-decoration:none'>22</span></a></span></p>

<p class=MsoToc1><span lang=EN-US><a href="#_Toc345873181"><span lang=EN-US
style='font-family:"微软雅黑","sans-serif"'><span lang=EN-US>附录</span></span>A <span
lang=EN-US style='font-family:"微软雅黑","sans-serif"'><span lang=EN-US>参考文档、规范</span></span><span
style='color:windowtext;display:none;text-decoration:none'>... </span><span
style='color:windowtext;display:none;text-decoration:none'>I</span></a></span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<span lang=EN-US style='font-size:10.5pt;font-family:"Candara","sans-serif"'><br
clear=all style='page-break-before:always'>
</span></div>

<span lang=EN-US style='font-size:10.5pt;font-family:"Candara","sans-serif"'><br
clear=all style='page-break-before:always'>
</span>

<div class=WordSection3 style='layout-grid:15.6pt'>

<h1><a name="_Toc345873140"><span lang=EN-US style='font-family:"YaHei Consolas Hybrid","sans-serif"'>1<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp; </span></span><span
style='font-family:"微软雅黑","sans-serif"'>前言</span></a></h1>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:"微软雅黑","sans-serif"'>本文档旨在描述</span><span
lang=EN-US>Metaq</span><span style='font-family:"微软雅黑","sans-serif"'>的多个关键特性的实现原理，并对</span><span
lang=EN-US>Messaging System</span><span style='font-family:"微软雅黑","sans-serif"'>遇到的各种问题进行总结，阐述</span><span
lang=EN-US>Metaq</span><span style='font-family:"微软雅黑","sans-serif"'>如何解决这些问题。文中主要引用了</span><span
lang=EN-US>JMS</span><span style='font-family:"微软雅黑","sans-serif"'>规范与</span><span
lang=EN-US>CORBA Notification</span><span style='font-family:"微软雅黑","sans-serif"'>规范，规范为我们设计系统指明了方向，但是仍有不少问题规范没有提及，对于消息系统又至关重要。</span><span
lang=EN-US>Metaq</span><span style='font-family:"微软雅黑","sans-serif"'>并不遵循任何规范，但是参考了各种规范与其他产品的优点。</span></p>

<h1><a name="_Toc345873141"><span lang=EN-US style='font-family:"YaHei Consolas Hybrid","sans-serif"'>2<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp; </span></span><span
style='font-family:"微软雅黑","sans-serif"'>特别说明</span></a></h1>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(1).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>关于产品名称</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:0cm'><span
lang=EN-US>Metamorphosis</span><span style='font-family:"微软雅黑","sans-serif"'>，取自</span><span
lang=EN-US>Kafka</span><span style='font-family:"微软雅黑","sans-serif"'>短篇代表作《变形记》，是卡氏艺术上的最高成就，被认为是</span><span
lang=EN-US>20</span><span style='font-family:"微软雅黑","sans-serif"'>世纪最伟大的小说作品之一。创作于</span><span
lang=EN-US>1912</span><span style='font-family:"微软雅黑","sans-serif"'>年，发表于</span><span
lang=EN-US>1915</span><span style='font-family:"微软雅黑","sans-serif"'>年。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:0cm'><span
style='font-family:"微软雅黑","sans-serif"'>为方便读写，又因为她是一个完全的队列模型消息中间件，所以从</span><span
lang=EN-US>2.0</span><span style='font-family:"微软雅黑","sans-serif"'>版本开始，产品名称由“</span><span
lang=EN-US>Metamorphosis</span><span style='font-family:"微软雅黑","sans-serif"'>”改为“</span><span
lang=EN-US>Metaq</span><span style='font-family:"微软雅黑","sans-serif"'>”。</span></p>

<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span
style='font-family:"微软雅黑","sans-serif"'>淘宝内部都这样读：</span><span lang=EN-US
style='font-size:9.5pt;font-family:"Lucida Sans Unicode","sans-serif"'>[ma&#618;t&#652;kju&#720;]</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(2).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
lang=EN-US>Metamorphosis 1.x</span><span style='font-family:"微软雅黑","sans-serif"'>版本由</span><span
lang=EN-US>Java</span><span style='font-family:"微软雅黑","sans-serif"'>社区著名的庄晓丹</span><span
lang=EN-US>(killme2008@gmail.com)</span><span style='font-family:"微软雅黑","sans-serif"'>开发，可参见以下资料</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:0cm'><span
lang=EN-US><a href="http://www.iteye.com/magazines/107">http://www.iteye.com/magazines/107</a></span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:0cm'><span
lang=EN-US><a href="http://github.com/killme2008/Metamorphosis">http://github.com/killme2008/Metamorphosis</a></span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(3).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"微软雅黑","sans-serif"'>本文着重介绍</span><span lang=EN-US>Metaq 2.x</span><span
style='font-family:"微软雅黑","sans-serif"'>版本相关，</span><span lang=EN-US>2.x</span><span
style='font-family:"微软雅黑","sans-serif"'>版本现在已经开源，有任何问题可以通过开源网站联系我们。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:0cm'><span
lang=EN-US><a href="http://metaq.taobao.org/">http://metaq.taobao.org/</a></span></p>

<h1><a name="_Toc345873142"><span lang=EN-US>3<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>专业术语</span></a></h1>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>n<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><b><span lang=EN-US>Producer</span></b></p>

<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span
style='font-family:"微软雅黑","sans-serif"'>消息生产者，负责产生消息，一般由业务系统负责产生消息。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>n<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><b><span lang=EN-US>Consumer</span></b></p>

<p class=MsoListParagraph style='margin-left:21.0pt'><span style='font-family:
"微软雅黑","sans-serif"'>消息消费者，负责消费消息，一般是后台系统负责异步消费。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>n<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><b><span lang=EN-US>Consumer Group</span></b></p>

<p class=MsoListParagraph style='margin-left:21.0pt'><span style='font-family:
"微软雅黑","sans-serif"'>一类</span><span lang=EN-US>Consumer</span><span
style='font-family:"微软雅黑","sans-serif"'>的集合名称，这类</span><span lang=EN-US>Consumer</span><span
style='font-family:"微软雅黑","sans-serif"'>通常消费一类消息，且消费逻辑一致。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>n<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><b><span lang=EN-US>Broker</span></b></p>

<p class=MsoListParagraph style='margin-left:21.0pt'><span style='font-family:
"微软雅黑","sans-serif"'>消息中转角色，负责存储消息，转发消息，一般也称为</span><span lang=EN-US>Server</span><span
style='font-family:"微软雅黑","sans-serif"'>。在</span><span lang=EN-US>JMS</span><span
style='font-family:"微软雅黑","sans-serif"'>规范中称为</span><span lang=EN-US>Provider</span><span
style='font-family:"微软雅黑","sans-serif"'>。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>n<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><b><span style='font-family:"微软雅黑","sans-serif"'>广播消费</span></b></p>

<p class=MsoNormal style='margin-left:42.0pt'><span style='font-family:"微软雅黑","sans-serif"'>一条消息被多个</span><span
lang=EN-US>Consumer</span><span style='font-family:"微软雅黑","sans-serif"'>消费，即使这些</span><span
lang=EN-US>Consumer</span><span style='font-family:"微软雅黑","sans-serif"'>属于同一个</span><span
lang=EN-US>Consumer Group</span><span style='font-family:"微软雅黑","sans-serif"'>，消息也会被</span><span
lang=EN-US>Consumer Group</span><span style='font-family:"微软雅黑","sans-serif"'>中的每个</span><span
lang=EN-US>Consumer</span><span style='font-family:"微软雅黑","sans-serif"'>都消费一次。</span></p>

<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span
style='font-family:"微软雅黑","sans-serif"'>在</span><span lang=EN-US>CORBA Notification</span><span
style='font-family:"微软雅黑","sans-serif"'>规范中，消费方式都属于广播消费。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>n<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><b><span style='font-family:"微软雅黑","sans-serif"'>集群消费</span></b></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:0cm'><span
style='font-family:"微软雅黑","sans-serif"'>一个</span><span lang=EN-US>Consumer
Group</span><span style='font-family:"微软雅黑","sans-serif"'>中的</span><span
lang=EN-US>Consumer</span><span style='font-family:"微软雅黑","sans-serif"'>实例平均分摊消费消息，类似于</span><span
lang=EN-US>JMS</span><span style='font-family:"微软雅黑","sans-serif"'>规范中的</span><span
lang=EN-US>Point-to-Point Messaging</span></p>

<p class=MsoListParagraph style='margin-left:21.0pt'><span style='font-family:
"微软雅黑","sans-serif"'>特点如下：</span></p>

<p class=MsoListParagraph style='margin-left:84.0pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>u<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span lang=EN-US>Each message has only one consumer.</span></p>

<p class=MsoListParagraph style='margin-left:84.0pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>u<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span lang=EN-US>A sender and a receiver of a message have no
timing dependencies. The receiver can fetch the message whether or not it was
running when the client sent the message.</span></p>

<p class=MsoListParagraph style='margin-left:84.0pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>u<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span lang=EN-US>The receiver acknowledges the successful
processing of a message.</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>n<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><b><span style='font-family:"微软雅黑","sans-serif"'>主动消费</span></b></p>

<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span
lang=EN-US>Consumer</span><span style='font-family:"微软雅黑","sans-serif"'>主动向</span><span
lang=EN-US>Broker</span><span style='font-family:"微软雅黑","sans-serif"'>发起获取消息请求，控制权完全在于</span><span
lang=EN-US>Consumer</span><span style='font-family:"微软雅黑","sans-serif"'>应用。</span></p>

<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span
style='font-family:"微软雅黑","sans-serif"'>类似于</span><span lang=EN-US>JMS</span><span
style='font-family:"微软雅黑","sans-serif"'>规范中描述的</span><span lang=EN-US>Synchronously</span><span
style='font-family:"微软雅黑","sans-serif"'>方式消费</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>n<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><b><span style='font-family:"微软雅黑","sans-serif"'>被动消费</span></b></p>

<p class=MsoListParagraph style='margin-left:21.0pt'><span lang=EN-US>Consumer</span><span
style='font-family:"微软雅黑","sans-serif"'>注册一个</span><span lang=EN-US>Callback</span><span
style='font-family:"微软雅黑","sans-serif"'>接口，由</span><span lang=EN-US>Metaq</span><span
style='font-family:"微软雅黑","sans-serif"'>后台自动从</span><span lang=EN-US>Broker</span><span
style='font-family:"微软雅黑","sans-serif"'>接收消息，并回调</span><span lang=EN-US>Callback</span><span
style='font-family:"微软雅黑","sans-serif"'>接口。</span></p>

<p class=MsoListParagraph style='margin-left:21.0pt'><span style='font-family:
"微软雅黑","sans-serif"'>类似于</span><span lang=EN-US>JMS</span><span
style='font-family:"微软雅黑","sans-serif"'>规范中的描述的</span><span lang=EN-US>Asynchronously</span><span
style='font-family:"微软雅黑","sans-serif"'>方式消费</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>n<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><b><span style='font-family:"微软雅黑","sans-serif"'>顺序消息</span></b></p>

<p class=MsoNormal style='margin-left:42.0pt'><span style='font-family:"微软雅黑","sans-serif"'>消费消息的顺序要同发送消息的顺序一致，在</span><span
lang=EN-US>Metaq</span><span style='font-family:"微软雅黑","sans-serif"'>中，主要指的是局部顺序，即一类消息为满足顺序性，必须</span><span
lang=EN-US>Producer</span><span style='font-family:"微软雅黑","sans-serif"'>单线程顺序发送，且发送到同一个队列，这样</span><span
lang=EN-US>Consumer</span><span style='font-family:"微软雅黑","sans-serif"'>就可以按照</span><span
lang=EN-US>Producer</span><span style='font-family:"微软雅黑","sans-serif"'>发送的顺序去消费消息。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>n<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><b><span style='font-family:"微软雅黑","sans-serif"'>普通顺序消息</span></b></p>

<p class=MsoNormal style='margin-left:42.0pt'><span style='font-family:"微软雅黑","sans-serif"'>顺序消息的一种，正常情况下可以保证完全的顺序消息，但是一旦发生通信异常，</span><span
lang=EN-US>Broker</span><span style='font-family:"微软雅黑","sans-serif"'>重启，由于队列总数发生变化，哈希取模后定位的队列会变化，产生短暂的消息顺序不一致。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>n<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><b><span style='font-family:"微软雅黑","sans-serif"'>严格顺序消息</span></b></p>

<p class=MsoNormal style='margin-left:42.0pt'><span style='font-family:"微软雅黑","sans-serif"'>顺序消息的一种，无论正常异常情况都能保证顺序，但是牺牲了分布式</span><span
lang=EN-US>Failover</span><span style='font-family:"微软雅黑","sans-serif"'>特性。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>n<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><b><span lang=EN-US>Message Queue</span></b></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:0cm'><span
style='font-family:"微软雅黑","sans-serif"'>在</span><span lang=EN-US>Metaq</span><span
style='font-family:"微软雅黑","sans-serif"'>中，所有消息队列都是持久化，长度无限的数据结构，所谓长度无限是指队列中的每个存储单元都是定长，访问其中的存储单元使用</span><span
lang=EN-US>Offset</span><span style='font-family:"微软雅黑","sans-serif"'>来访问，</span><span
lang=EN-US>offset</span><span style='font-family:"微软雅黑","sans-serif"'>为</span><span
lang=EN-US>java long</span><span style='font-family:"微软雅黑","sans-serif"'>类型，</span><span
lang=EN-US>64</span><span style='font-family:"微软雅黑","sans-serif"'>位，理论上在</span><span
lang=EN-US>100</span><span style='font-family:"微软雅黑","sans-serif"'>年内不会溢出，所以认为是长度无限，另外队列中只保存最近几天的数据，之前的数据会按照过期时间来删除。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:0cm'><span
style='font-family:"微软雅黑","sans-serif"'>在</span><span lang=EN-US>Metaq2.x</span><span
style='font-family:"微软雅黑","sans-serif"'>之前版本，队列也称为“<b>分区</b>”，两者描述的是一个概念。但是按照</span><span
lang=EN-US>2.x</span><span style='font-family:"微软雅黑","sans-serif"'>的实现，使用队列描述更合适。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>n<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><b><span lang=EN-US>Messaging System</span></b></p>

<p class=MsoNormal style='margin-left:21.0pt;text-indent:21.0pt'><span
style='font-family:"微软雅黑","sans-serif"'>消息中间件的统称，但并不局限于消息中间件，与消息传输相关的类似系统。</span></p>

<h1><a name="_Toc345873143"><span lang=EN-US>4<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>消息系统需要解决哪些问题？</span></a></h1>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:"微软雅黑","sans-serif"'>本节阐述消息系统通常需要解决哪些问题，在解决这些问题当中会遇到什么困难，</span><span
lang=EN-US>Metaq</span><span style='font-family:"微软雅黑","sans-serif"'>是否可以解决，规范中如何定义这些问题。</span></p>

<h2><a name="_Toc345873144"><span lang=EN-US>4.1<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Publish/Subscribe</span></a></h2>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:"微软雅黑","sans-serif"'>发布订阅是消息系统的最基本功能，也是相对于传统</span><span
lang=EN-US>RPC</span><span style='font-family:"微软雅黑","sans-serif"'>通信而言。在此不再详述。</span></p>

<h2><a name="_Toc345873145"><span lang=EN-US>4.2<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Message Order</span></a></h2>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:"微软雅黑","sans-serif"'>消息有序指的是一类消息消费时，能按照发送的顺序来消费。例如：一个订单产生了</span><span
lang=EN-US>3</span><span style='font-family:"微软雅黑","sans-serif"'>条消息，分别是订单创建，订单付款，订单完成。消费时，要按照这个顺序消费才能有意义。但是同时订单之间是可以并行消费的。</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span lang=EN-US>Metaq</span><span
style='font-family:"微软雅黑","sans-serif"'>可以严格的保证消息有序。</span></p>

<h2><a name="_Toc345873146"><span lang=EN-US>4.3<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>消息过滤</span></a></h2>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>n<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span lang=EN-US>Broker</span><span style='font-family:"微软雅黑","sans-serif"'>端消息过滤</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:0cm'><span
style='font-family:"微软雅黑","sans-serif"'>在</span><span lang=EN-US>Broker</span><span
style='font-family:"微软雅黑","sans-serif"'>中，按照</span><span lang=EN-US>Consumer</span><span
style='font-family:"微软雅黑","sans-serif"'>的要求做过滤，优点是减少了对于</span><span lang=EN-US>Consumer</span><span
style='font-family:"微软雅黑","sans-serif"'>无用消息的网络传输。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:0cm'><span
style='font-family:"微软雅黑","sans-serif"'>缺点是增加了</span><span lang=EN-US>Broker</span><span
style='font-family:"微软雅黑","sans-serif"'>的负担，实现相对复杂。</span></p>

<p class=MsoListParagraph style='margin-left:63.0pt;text-indent:-21.0pt'><span
lang=EN-US>(1).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>淘宝</span><span
lang=EN-US>Notify</span><span style='font-family:"微软雅黑","sans-serif"'>支持多种过滤方式，包含直接按照消息类型过滤，灵活的语法表达式过滤，几乎可以满足最苛刻的过滤需求。</span></p>

<p class=MsoListParagraph style='margin-left:63.0pt;text-indent:-21.0pt'><span
lang=EN-US>(2).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"微软雅黑","sans-serif"'>淘宝</span><span lang=EN-US>Metaq</span><span
style='font-family:"微软雅黑","sans-serif"'>只支持按照简单的消息类型过滤。</span></p>

<p class=MsoListParagraph style='margin-left:63.0pt;text-indent:-21.0pt'><span
lang=EN-US>(3).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
lang=EN-US>CORBA Notification</span><span style='font-family:"微软雅黑","sans-serif"'>规范中也支持灵活的语法表达式过滤。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>n<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span lang=EN-US>Consumer</span><span style='font-family:"微软雅黑","sans-serif"'>端消息过滤</span></p>

<p class=MsoNormal style='margin-left:42.0pt'><span style='font-family:"微软雅黑","sans-serif"'>这种过滤方式可由应用完全自定义实现，</span>
<span style='font-family:"微软雅黑","sans-serif"'>但是缺点是很多无用的消息要传输到</span><span
lang=EN-US>Consumer</span><span style='font-family:"微软雅黑","sans-serif"'>端。</span></p>

<h2><a name="_Toc345873147"><span lang=EN-US>4.4<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Message Priority</span></a></h2>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:"微软雅黑","sans-serif"'>规范中描述的优先级是指在一个消息队列中，每条消息都有不同的优先级，一般用整数来描述，优先级高的消息先投递，如果消息完全在一个内存队列中，那么在投递前可以按照优先级排序，令优先级高的先投递。</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:"微软雅黑","sans-serif"'>由于</span><span
lang=EN-US>Metaq</span><span style='font-family:"微软雅黑","sans-serif"'>所有消息都是持久化的，所以如果按照优先级来排序，开销会非常大，因此</span><span
lang=EN-US>Metaq</span><span style='font-family:"微软雅黑","sans-serif"'>没有特意支持消息优先级，但是可以通过变通的方式实现类似功能，即单独配置一个优先级高的队列，和一个普通优先级的队列，</span>
<span style='font-family:"微软雅黑","sans-serif"'>将不同优先级发送到不同队列即可。</span></p>

<h2><a name="_Toc345873148"><span lang=EN-US>4.5<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Exactly And Only Once</span></a></h2>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:"微软雅黑","sans-serif"'>消息是否重复性问题，</span><span
lang=EN-US>JMS</span><span style='font-family:"微软雅黑","sans-serif"'>中有如下说明：</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span lang=EN-US>The JMS API can
ensure that a message is delivered once and only once. Lower levels of
reliability are available for applications that can afford to miss messages or
to receive duplicate messages.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='font-family:"微软雅黑","sans-serif"'>我对于此特性的理解：</span></p>

<p class=MsoListParagraph style='margin-left:42.05pt;text-indent:-21.0pt'><span
lang=EN-US>(1).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>发送消息阶段，不允许发送重复的消息。</span></p>

<p class=MsoListParagraph style='margin-left:42.05pt;text-indent:-21.0pt'><span
lang=EN-US>(2).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"微软雅黑","sans-serif"'>消费消息阶段，不允许消费重复的消息。</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:"微软雅黑","sans-serif"'>只有以上两个条件都满足情况下，才能认为消息是“</span><span
lang=EN-US>Exactly And Only Once</span><span style='font-family:"微软雅黑","sans-serif"'>”，而要实现以上两点，在分布式系统环境下，不可避免要产生巨大的开销。所以</span><span
lang=EN-US>Metaq</span><span style='font-family:"微软雅黑","sans-serif"'>为了追求高性能，并不保证此特性，要求在业务上进行去重，也就是说消费消息要做到幂等性。</span><span
lang=EN-US>Metaq</span><span style='font-family:"微软雅黑","sans-serif"'>虽然不能严格保证不重复，但是正常情况下都不会出现重复发送、消费情况，只有网络异常，</span><span
lang=EN-US>Consumer</span><span style='font-family:"微软雅黑","sans-serif"'>启停等异常情况下会出现消息重复。</span></p>

<h2><a name="_Toc345873149"><span lang=EN-US>4.6<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>回溯消费</span></a></h2>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:"微软雅黑","sans-serif"'>回溯消费是指</span><span
lang=EN-US>Consumer</span><span style='font-family:"微软雅黑","sans-serif"'>已经消费成功的消息，由于业务上需求需要重新消费，要支持此功能，</span><span
lang=EN-US>Broker</span><span style='font-family:"微软雅黑","sans-serif"'>在向</span><span
lang=EN-US>Consumer</span><span style='font-family:"微软雅黑","sans-serif"'>投递成功消息后，消息仍然需要保留。并且重新消费一般是按照时间维度，例如由于</span><span
lang=EN-US>Consumer</span><span style='font-family:"微软雅黑","sans-serif"'>系统故障，恢复后需要重新消费</span><span
lang=EN-US>1</span><span style='font-family:"微软雅黑","sans-serif"'>小时前的数据，那么</span><span
lang=EN-US>Broker</span><span style='font-family:"微软雅黑","sans-serif"'>要提供一种机制，可以按照时间维度来回退消费进度。</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span lang=EN-US>Metaq</span><span
style='font-family:"微软雅黑","sans-serif"'>支持按照时间回溯消费，时间维度精确到毫秒。</span></p>

<h2><a name="_Toc345873150"><span lang=EN-US>4.7<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Message Persistence</span></a></h2>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:"微软雅黑","sans-serif"'>几种持久化方式：</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(1).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>持久化到数据库，例如</span><span
lang=EN-US>Mysql</span><span style='font-family:"微软雅黑","sans-serif"'>。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(2).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"微软雅黑","sans-serif"'>持久化到</span><span lang=EN-US>KV</span><span
style='font-family:"微软雅黑","sans-serif"'>存储，例如</span><span lang=EN-US>levelDB</span><span
style='font-family:"微软雅黑","sans-serif"'>、伯克利</span><span lang=EN-US>DB</span><span
style='font-family:"微软雅黑","sans-serif"'>等</span><span lang=EN-US>KV</span><span
style='font-family:"微软雅黑","sans-serif"'>存储系统。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(3).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"微软雅黑","sans-serif"'>文件记录形式持久化，例如</span><span lang=EN-US>Kafka</span><span
style='font-family:"微软雅黑","sans-serif"'>，</span><span lang=EN-US>Metaq</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(4).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp; </span></span><span
style='font-family:"微软雅黑","sans-serif"'>对内存数据做一个持久化镜像，例如</span><span
lang=EN-US>beanstalkd</span><span style='font-family:"微软雅黑","sans-serif"'>，</span><span
lang=EN-US>VisiNotify</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span lang=EN-US>(1)</span><span
style='font-family:"微软雅黑","sans-serif"'>、</span><span lang=EN-US>(2)</span><span
style='font-family:"微软雅黑","sans-serif"'>、</span><span lang=EN-US>(3)</span><span
style='font-family:"微软雅黑","sans-serif"'>三种持久化方式都具有将内存队列</span><span lang=EN-US>Buffer</span><span
style='font-family:"微软雅黑","sans-serif"'>进行扩展的能力，</span><span lang=EN-US>(4)</span><span
style='font-family:"微软雅黑","sans-serif"'>只是一个内存的镜像，作用是当</span><span lang=EN-US>Broker</span><span
style='font-family:"微软雅黑","sans-serif"'>挂掉重启后仍然能将之前内存的数据恢复出来。</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span lang=EN-US>JMS</span><span
style='font-family:"微软雅黑","sans-serif"'>与</span><span lang=EN-US>CORBA Notification</span><span
style='font-family:"微软雅黑","sans-serif"'>规范没有明确说明如何持久化，但是持久化部分的性能直接决定了整个消息系统的性能。</span></p>

<h2><a name="_Toc345873151"><span lang=EN-US>4.8<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Broker</span></a><span style='font-family:"微软雅黑","sans-serif"'>的</span><span
lang=EN-US>Buffer</span><span style='font-family:"微软雅黑","sans-serif"'>满了怎么办？</span></h2>

<p class=MsoNormal style='text-indent:21.0pt'><span lang=EN-US>Broker</span><span
style='font-family:"微软雅黑","sans-serif"'>的</span><span lang=EN-US>Buffer</span><span
style='font-family:"微软雅黑","sans-serif"'>通常指的是</span><span lang=EN-US>Broker</span><span
style='font-family:"微软雅黑","sans-serif"'>中一个队列的内存</span><span lang=EN-US>Buffer</span><span
style='font-family:"微软雅黑","sans-serif"'>大小，这类</span><span lang=EN-US>Buffer</span><span
style='font-family:"微软雅黑","sans-serif"'>通常大小有限，如果</span><span lang=EN-US>Buffer</span><span
style='font-family:"微软雅黑","sans-serif"'>满了以后怎么办？</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:"微软雅黑","sans-serif"'>下面是</span><span
lang=EN-US>CORBA Notification</span><span style='font-family:"微软雅黑","sans-serif"'>规范中处理方式：</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(1).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>RejectNewEvents</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:0cm'><span
style='font-family:"微软雅黑","sans-serif"'>拒绝新来的消息，向</span><span lang=EN-US>Producer</span><span
style='font-family:"微软雅黑","sans-serif"'>返回</span><span lang=EN-US>RejectNewEvents</span><span
style='font-family:"微软雅黑","sans-serif"'>错误码。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(2).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"微软雅黑","sans-serif"'>按照特定策略丢弃已有消息</span></p>

<p class=MsoListParagraph style='margin-left:63.0pt;text-indent:-21.0pt'><span
lang=EN-US>a)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><b><span lang=EN-US>AnyOrder</span></b><span lang=EN-US> - Any
event may be discarded on overflow. This is the default setting for this</span></p>

<p class=MsoListParagraph style='margin-left:63.0pt;text-indent:0cm'><span
lang=EN-US>property.</span></p>

<p class=MsoListParagraph style='margin-left:63.0pt;text-indent:-21.0pt'><span
lang=EN-US>b)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><b><span lang=EN-US>FifoOrder</span></b><span lang=EN-US> - The
first event received will be the first discarded.</span></p>

<p class=MsoListParagraph style='margin-left:63.0pt;text-indent:-21.0pt'><span
lang=EN-US>c)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><b><span lang=EN-US>LifoOrder</span></b><span lang=EN-US> - The
last event received will be the first discarded.</span></p>

<p class=MsoListParagraph style='margin-left:63.0pt;text-indent:-21.0pt'><span
lang=EN-US>d)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><b><span lang=EN-US>PriorityOrder</span></b><span lang=EN-US> -
Events should be discarded in priority order, such that lower priority</span></p>

<p class=MsoListParagraph style='margin-left:63.0pt;text-indent:0cm'><span
lang=EN-US>events will be discarded before higher priority events.</span></p>

<p class=MsoListParagraph style='margin-left:63.0pt;text-indent:-21.0pt'><span
lang=EN-US>e)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><b><span lang=EN-US>DeadlineOrder</span></b><span lang=EN-US> -
Events should be discarded in the order of shortest expiry deadline first.</span></p>

<h2><a name="_Toc345873152"><span lang=EN-US>4.9<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>消息堆积</span></a></h2>

<p class=MsoNormal style='text-indent:21.0pt'><span lang=EN-US>Messaging System</span><span
style='font-family:"微软雅黑","sans-serif"'>的主要功能是异步解耦，还有个重要功能是挡住前端的数据洪峰，保证后端系统的稳定性，这就要求</span><span
lang=EN-US>Messaging System</span><span style='font-family:"微软雅黑","sans-serif"'>具有一定的消息堆积能力，消息堆积分以下两种情况：</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(1).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>消息堆积在内存</span><span
lang=EN-US>Buffer</span><span style='font-family:"微软雅黑","sans-serif"'>，一旦超过内存</span><span
lang=EN-US>Buffer</span><span style='font-family:"微软雅黑","sans-serif"'>，可以根据一定的丢弃策略来丢弃消息，如</span><span
lang=EN-US>CORBA Notification</span><span style='font-family:"微软雅黑","sans-serif"'>规范中描述。适合能容忍丢弃消息的业务，这种情况消息的堆积能力主要在于内存</span><span
lang=EN-US>Buffer</span><span style='font-family:"微软雅黑","sans-serif"'>大小，而且消息堆积后，性能下降不会太大，因为内存中数据多少对于对外提供的访问能力影响有限。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(2).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"微软雅黑","sans-serif"'>消息堆积到持久化存储系统中，例如</span><span
lang=EN-US>DB</span><span style='font-family:"微软雅黑","sans-serif"'>，</span><span
lang=EN-US>KV</span><span style='font-family:"微软雅黑","sans-serif"'>存储，文件记录形式。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:0cm'><span
style='font-family:"微软雅黑","sans-serif"'>当消息不能在内存</span><span lang=EN-US>Cache</span><span
style='font-family:"微软雅黑","sans-serif"'>命中时，要不可避免的访问磁盘，会产生大量读</span><span
lang=EN-US>IO</span><span style='font-family:"微软雅黑","sans-serif"'>，读</span><span
lang=EN-US>IO</span><span style='font-family:"微软雅黑","sans-serif"'>的吞吐量直接决定了消息堆积后的访问能力。</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='font-family:"微软雅黑","sans-serif"'>评估消息堆积能力主要有以下四点：</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(1).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>消息能堆积多少条，多少字节？即消息的堆积容量。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(2).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"微软雅黑","sans-serif"'>消息堆积后，发消息的吞吐量大小，是否会受堆积影响？</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(3).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"微软雅黑","sans-serif"'>消息堆积后，正常消费的</span><span lang=EN-US>Consumer</span><span
style='font-family:"微软雅黑","sans-serif"'>是否会受影响？</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(4).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp; </span></span><span
style='font-family:"微软雅黑","sans-serif"'>消息堆积后，访问堆积在磁盘的消息时，吞吐量有多大？</span></p>

<h2><a name="_Toc345873153"><span lang=EN-US>4.10<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Message Reliablity</span></a><span lang=EN-US> </span></h2>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:"微软雅黑","sans-serif"'>影响消息可靠性的几种情况：</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(1).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Broker</span><span style='font-family:"微软雅黑","sans-serif"'>正常关闭</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(2).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
lang=EN-US>Broker</span><span style='font-family:"微软雅黑","sans-serif"'>异常</span><span
lang=EN-US>Crash</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(3).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
lang=EN-US>OS Crash</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(4).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp; </span></span><span
style='font-family:"微软雅黑","sans-serif"'>机器掉电，但是能立即恢复供电情况。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(5).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"微软雅黑","sans-serif"'>机器无法开机（可能是</span><span lang=EN-US>cpu</span><span
style='font-family:"微软雅黑","sans-serif"'>、主板、内存等关键设备损坏）</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(6).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp; </span></span><span
style='font-family:"微软雅黑","sans-serif"'>磁盘设备损坏。</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span lang=EN-US>(1)</span><span
style='font-family:"微软雅黑","sans-serif"'>、</span><span lang=EN-US>(2)</span><span
style='font-family:"微软雅黑","sans-serif"'>、</span><span lang=EN-US>(3)</span><span
style='font-family:"微软雅黑","sans-serif"'>、</span><span lang=EN-US>(4)</span><span
style='font-family:"微软雅黑","sans-serif"'>四种情况都属于硬件资源可立即恢复情况，</span><span
lang=EN-US>Metaq</span><span style='font-family:"微软雅黑","sans-serif"'>在这四种情况下能保证消息不丢，或者丢失少量数据（依赖刷盘方式是同步还是异步）。</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span lang=EN-US>(5)</span><span
style='font-family:"微软雅黑","sans-serif"'>、</span><span lang=EN-US>(6)</span><span
style='font-family:"微软雅黑","sans-serif"'>属于单点故障，且无法恢复，一旦发生，在此单点上的消息全部丢失。</span><span
lang=EN-US>Metaq</span><span style='font-family:"微软雅黑","sans-serif"'>在这两种情况下，通过异步复制，可保证</span><span
lang=EN-US>99%</span><span style='font-family:"微软雅黑","sans-serif"'>的消息不丢，但是仍然会有极少量的消息可能丢失。未来版本会通过同步双写技术来完全避免单点，同步双写势必会影响性能，适合对消息可靠性要求极高的场合，例如与</span><span
lang=EN-US>Money</span><span style='font-family:"微软雅黑","sans-serif"'>相关的应用。</span></p>

<h2><a name="_Toc345873154"><span lang=EN-US>4.11<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>分布式事务</span></a></h2>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:"微软雅黑","sans-serif"'>已知的几个分布式事务规范，如</span><span
lang=EN-US>XA</span><span style='font-family:"微软雅黑","sans-serif"'>，</span><span
lang=EN-US>JTA</span><span style='font-family:"微软雅黑","sans-serif"'>等。其中</span><span
lang=EN-US>XA</span><span style='font-family:"微软雅黑","sans-serif"'>规范被各大数据库厂商广泛支持，如</span><span
lang=EN-US>Oracle</span><span style='font-family:"微软雅黑","sans-serif"'>，</span><span
lang=EN-US>Mysql</span><span style='font-family:"微软雅黑","sans-serif"'>等。其中</span><span
lang=EN-US>XA</span><span style='font-family:"微软雅黑","sans-serif"'>的</span><span
lang=EN-US>TM</span><span style='font-family:"微软雅黑","sans-serif"'>实现佼佼者如</span><span
lang=EN-US>Oracle Tuxedo</span><span style='font-family:"微软雅黑","sans-serif"'>，在金融、电信等领域被广泛应用。</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span lang=EN-US>Metaq</span><span
style='font-family:"微软雅黑","sans-serif"'>的存储结构是文件记录形式，通过</span><span lang=EN-US>Offset</span><span
style='font-family:"微软雅黑","sans-serif"'>递增进行访问数据，缺乏</span><span lang=EN-US>KV</span><span
style='font-family:"微软雅黑","sans-serif"'>存储具有的</span><span lang=EN-US>update</span><span
style='font-family:"微软雅黑","sans-serif"'>能力，如果要支持事务，必须引入类似于</span><span
lang=EN-US>KV</span><span style='font-family:"微软雅黑","sans-serif"'>存储的模块才可以。</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span lang=EN-US>Metaq</span><span
style='font-family:"微软雅黑","sans-serif"'>目前不支持分布式事务。</span></p>

<h1><a name="_Toc345873155"><span lang=EN-US style='font-family:"YaHei Consolas Hybrid","sans-serif"'>5<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp; </span></span><span
style='font-family:"微软雅黑","sans-serif"'>消息系统实现</span></a></h1>

<h2><a name="_Toc345873156"><span lang=EN-US>5.1<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>典型实现</span></a></h2>

<p class=MsoNormal align=center style='text-align:center;page-break-after:avoid'><span
lang=EN-US><img border=0 width=697 height=251 src="design.files/image001.png"></span></p>

<p class=MsoCaption align=center style='text-align:center'><span
style='font-family:黑体'>图表</span> <span lang=EN-US>5</span><span lang=EN-US>&#8209;</span><span
lang=EN-US>1</span><span lang=EN-US> Messaging System</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span
style='font-family:"微软雅黑","sans-serif"'>一个典型的消息系统实现一般分为以下几部分：</span></p>

<p class=MsoListParagraph style='margin-left:42.05pt;text-indent:-21.0pt'><span
lang=EN-US>(1).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>消息接收阶段，收到消息后，存储到存储模块，可以是本地</span><span
lang=EN-US>KV</span><span style='font-family:"微软雅黑","sans-serif"'>存储、文件记录存储、远程</span><span
lang=EN-US>DB</span><span style='font-family:"微软雅黑","sans-serif"'>、或其他存储模式，然后将消息转发至</span><span
lang=EN-US>Dispatch</span><span style='font-family:"微软雅黑","sans-serif"'>处理流程。</span></p>

<p class=MsoListParagraph style='margin-left:42.05pt;text-indent:-21.0pt'><span
lang=EN-US>(2).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"微软雅黑","sans-serif"'>消息分发阶段，可能的操作包含消息过滤、分发到特定队列或者</span><span
lang=EN-US>Consumer Group</span><span style='font-family:"微软雅黑","sans-serif"'>队列。</span></p>

<p class=MsoListParagraph style='margin-left:42.05pt;text-indent:-21.0pt'><span
lang=EN-US>(3).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"微软雅黑","sans-serif"'>消息投递阶段，直接与</span><span lang=EN-US>Consumer</span><span
style='font-family:"微软雅黑","sans-serif"'>进行通信，可以是主动投递或者被动投递。</span></p>

<h2><a name="_Toc345873157"><span lang=EN-US>5.2<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Apache Kafka</span></a><span style='font-family:
"微软雅黑","sans-serif"'>实现</span></h2>

<p class=MsoNormal style='margin-left:21.0pt'><span lang=EN-US>Apache Kafka is
a distributed publish-subscribe messaging system. It is designed to support the
following.</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>n<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span lang=EN-US>Persistent messaging with O(1) disk structures
that provide constant time performance even with many TB of stored messages.</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>n<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span lang=EN-US>High-throughput: even with very modest hardware
Kafka can support hundreds of thousands of messages per second.</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>n<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span lang=EN-US>Explicit support for partitioning messages over
Kafka servers and distributing consumption over a cluster of consumer machines
while maintaining per-partition ordering semantics.</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>n<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span lang=EN-US>Support for parallel data load into Hadoop.</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span lang=EN-US>Kafka provides a
publish-subscribe solution that can handle all activity stream data and
processing on a consumer-scale web site. This kind of activity (page views,
searches, and other user actions) are a key ingredient in many of the social
feature on the modern web. This data is typically handled by &quot;logging&quot;
and ad hoc log aggregation solutions due to the throughput requirements. This
kind of ad hoc solution is a viable solution to providing logging data to an
offline analysis system like Hadoop, but is very limiting for building
real-time processing. Kafka aims to unify offline and online processing by
providing a mechanism for parallel load into Hadoop as well as the ability to
partition real-time consumption over a cluster of machines.</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span lang=EN-US>The use for
activity stream processing makes Kafka comparable to Facebook's Scribe or
Apache Flume (incubating), though the architecture and primitives are very
different for these systems and make Kafka more comparable to a traditional
messaging system. See our design page for more details.</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:"微软雅黑","sans-serif"'>以上文字摘自</span><span
lang=EN-US>Apache Kafka</span><span style='font-family:"微软雅黑","sans-serif"'>官方网站，</span><span
lang=EN-US>Kafka</span><span style='font-family:"微软雅黑","sans-serif"'>详细资料，请参照官方网站，此文不再详述。</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span lang=EN-US><a
href="http://kafka.apache.org/">http://kafka.apache.org/</a></span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span lang=EN-US>Kafka</span><span
style='font-family:"微软雅黑","sans-serif"'>是一个实现非常特别的消息系统，同我们的典型实现区别较大，跳出了各种消息系统规范定义的思维模式，按照我的理解总结如下：</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(1).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Kafka</span><span style='font-family:"微软雅黑","sans-serif"'>的设计初衷消息是面向堆积需求的，读优先级高于写优先级，优先为读消息准备，所以无论堆积的消息多少，消费能力都很强。（前提是分区数在一定范围内）</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(2).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
lang=EN-US>Kafka</span><span style='font-family:"微软雅黑","sans-serif"'>是面向广播消费类型的，对广播支持友好，并且也支持集群消费模式。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(3).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"微软雅黑","sans-serif"'>很适合日志收集类应用。</span></p>

<h2><a name="_Toc345873158"><span lang=EN-US>5.3<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Push</span></a><span style='font-family:"微软雅黑","sans-serif"'>和</span><span
lang=EN-US>Pull</span></h2>

<p class=MsoNormal style='text-indent:21.0pt'><span lang=EN-US>push</span><span
style='font-family:"微软雅黑","sans-serif"'>与</span><span lang=EN-US>pull</span><span
style='font-family:"微软雅黑","sans-serif"'>是两种数据通信方式，在</span><span lang=EN-US>Consumer</span><span
style='font-family:"微软雅黑","sans-serif"'>从</span><span lang=EN-US>Broker</span><span
style='font-family:"微软雅黑","sans-serif"'>获取消息过程中会用到这两种方式，区别如下：</span></p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none'>
 <tr>
  <td width=237 style='width:178.0pt;border:solid windowtext 1.0pt;padding:
  0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal align=center style='text-align:center'><span lang=EN-US>&nbsp;</span></p>
  </td>
  <td width=237 style='width:178.05pt;border:solid windowtext 1.0pt;border-left:
  none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal align=center style='text-align:center'><b><span
  lang=EN-US>Push</span></b></p>
  </td>
  <td width=237 style='width:178.05pt;border:solid windowtext 1.0pt;border-left:
  none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal align=center style='text-align:center'><b><span
  lang=EN-US>Pull</span></b></p>
  </td>
 </tr>
 <tr>
  <td width=237 style='width:178.0pt;border:solid windowtext 1.0pt;border-top:
  none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal align=left style='text-align:left'><span style='font-family:
  "微软雅黑","sans-serif"'>数据传输状态</span></p>
  </td>
  <td width=237 style='width:178.05pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal align=left style='text-align:left'><span style='font-family:
  "微软雅黑","sans-serif"'>保存在</span><span lang=EN-US>Broker</span><span
  style='font-family:"微软雅黑","sans-serif"'>端</span></p>
  </td>
  <td width=237 style='width:178.05pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal align=left style='text-align:left'><span style='font-family:
  "微软雅黑","sans-serif"'>保存在</span><span lang=EN-US>Consumer</span><span
  style='font-family:"微软雅黑","sans-serif"'>端</span></p>
  </td>
 </tr>
 <tr>
  <td width=237 style='width:178.0pt;border:solid windowtext 1.0pt;border-top:
  none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal align=left style='text-align:left'><span style='font-family:
  "微软雅黑","sans-serif"'>传输失败，重试</span></p>
  </td>
  <td width=237 style='width:178.05pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal align=left style='text-align:left'><span lang=EN-US>Broker</span><span
  style='font-family:"微软雅黑","sans-serif"'>需要维护每次传输状态，遇到失败情况需要重试</span></p>
  </td>
  <td width=237 style='width:178.05pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal align=left style='text-align:left'><span style='font-family:
  "微软雅黑","sans-serif"'>不需要</span></p>
  </td>
 </tr>
 <tr>
  <td width=237 style='width:178.0pt;border:solid windowtext 1.0pt;border-top:
  none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal align=left style='text-align:left'><span style='font-family:
  "微软雅黑","sans-serif"'>数据传输实时性</span></p>
  </td>
  <td width=237 style='width:178.05pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal align=left style='text-align:left'><span style='font-family:
  "微软雅黑","sans-serif"'>非常实时</span></p>
  </td>
  <td width=237 style='width:178.05pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoListParagraph align=left style='margin-left:21.0pt;text-align:
  left;text-indent:-21.0pt'><span lang=EN-US>(1).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span style='font-family:"微软雅黑","sans-serif"'>默认的短轮询方式实时性依赖</span><span
  lang=EN-US>pull</span><span style='font-family:"微软雅黑","sans-serif"'>间隔时间，间隔越大实时性越低。</span></p>
  <p class=MsoListParagraph align=left style='margin-left:21.0pt;text-align:
  left;text-indent:-21.0pt'><span lang=EN-US>(2).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
  </span></span><span style='font-family:"微软雅黑","sans-serif"'>长轮询模式实时性与</span><span
  lang=EN-US>push</span><span style='font-family:"微软雅黑","sans-serif"'>一致。</span></p>
  </td>
 </tr>
 <tr>
  <td width=237 style='width:178.0pt;border:solid windowtext 1.0pt;border-top:
  none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal align=left style='text-align:left'><span style='font-family:
  "微软雅黑","sans-serif"'>流控机制</span></p>
  </td>
  <td width=237 style='width:178.05pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal align=left style='text-align:left'><span lang=EN-US>Broker</span><span
  style='font-family:"微软雅黑","sans-serif"'>需要依据</span><span lang=EN-US>Consumer</span><span
  style='font-family:"微软雅黑","sans-serif"'>的消费能力做流控。</span></p>
  </td>
  <td width=237 style='width:178.05pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal align=left style='text-align:left'><span lang=EN-US>Consumer</span><span
  style='font-family:"微软雅黑","sans-serif"'>可以根据自身消费能力决定是否去</span><span
  lang=EN-US>pull message</span><span style='font-family:"微软雅黑","sans-serif"'>。</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='text-indent:21.0pt'><span lang=EN-US>&nbsp;</span></p>

<h1><a name="_Toc345873159"><span lang=EN-US style='font-family:"YaHei Consolas Hybrid","sans-serif"'>6<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp; </span></span><span
lang=EN-US style='font-family:"YaHei Consolas Hybrid","sans-serif"'>Metaq
Overview</span></a></h1>

<h2><a name="_Toc345873160"><span lang=EN-US>6.1<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Metaq</span></a><span style='font-family:"微软雅黑","sans-serif"'>与</span><span
lang=EN-US>Apache Kafka</span><span style='font-family:"微软雅黑","sans-serif"'>的区别</span></h2>

<p class=MsoCaption align=center style='text-align:center;page-break-after:
avoid'><span style='font-family:黑体'>表格</span> <span
lang=EN-US>6</span><span lang=EN-US>&#8209;</span><span
lang=EN-US>1</span><span lang=EN-US>Metaq</span><span style='font-family:黑体'>与</span><span
lang=EN-US>Kafka</span><span style='font-family:黑体'>区别</span></p>

<div align=center>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0 width=680
 style='width:510.0pt;margin-left:4.7pt;border-collapse:collapse'>
 <tr style='height:31.5pt'>
  <td width=159 nowrap style='width:119.0pt;border:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:31.5pt'>
  <p class=MsoNormal><span style='font-family:"微软雅黑","sans-serif"'>　</span></p>
  </td>
  <td width=237 nowrap style='width:178.0pt;border:solid windowtext 1.0pt;
  border-left:none;background:#92D050;padding:0cm 5.4pt 0cm 5.4pt;height:31.5pt'>
  <p class=MsoNormal><b><span lang=EN-US>Apache Kafka</span></b></p>
  </td>
  <td width=284 nowrap style='width:213.0pt;border:solid windowtext 1.0pt;
  border-left:none;background:#92D050;padding:0cm 5.4pt 0cm 5.4pt;height:31.5pt'>
  <p class=MsoNormal><b><span lang=EN-US>Taobao Metaq</span></b></p>
  </td>
 </tr>
 <tr style='height:15.0pt'>
  <td width=159 nowrap style='width:119.0pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt;height:15.0pt'>
  <p class=MsoNormal><b><span style='font-family:"微软雅黑","sans-serif"'>分区数</span></b></p>
  </td>
  <td width=237 nowrap style='width:178.0pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:15.0pt'>
  <p class=MsoNormal><span style='font-family:"微软雅黑","sans-serif"'>分区过多会</span><span
  lang=EN-US>Load</span><span style='font-family:"微软雅黑","sans-serif"'>升高</span></p>
  </td>
  <td width=284 nowrap style='width:213.0pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:15.0pt'>
  <p class=MsoNormal><span style='font-family:"微软雅黑","sans-serif"'>单机</span><span
  lang=EN-US>1</span><span style='font-family:"微软雅黑","sans-serif"'>万以上</span></p>
  </td>
 </tr>
 <tr style='height:15.0pt'>
  <td width=159 nowrap style='width:119.0pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt;height:15.0pt'>
  <p class=MsoNormal><b><span lang=EN-US>SATA</span></b><b><span
  style='font-family:"微软雅黑","sans-serif"'>盘下性能</span></b></p>
  </td>
  <td width=237 nowrap style='width:178.0pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:15.0pt'>
  <p class=MsoNormal><span style='font-family:"微软雅黑","sans-serif"'>性能极低</span></p>
  </td>
  <td width=284 nowrap style='width:213.0pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:15.0pt'>
  <p class=MsoNormal><span style='font-family:"微软雅黑","sans-serif"'>由于</span><span
  lang=EN-US>PAGECACHE</span><span style='font-family:"微软雅黑","sans-serif"'>作用，及刷盘方式的不同，性能接近</span><span
  lang=EN-US>SAS</span><span style='font-family:"微软雅黑","sans-serif"'>盘</span></p>
  </td>
 </tr>
 <tr style='height:15.0pt'>
  <td width=159 nowrap style='width:119.0pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt;height:15.0pt'>
  <p class=MsoNormal><b><span style='font-family:"微软雅黑","sans-serif"'>服务端消息过滤</span></b></p>
  </td>
  <td width=237 nowrap style='width:178.0pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:15.0pt'>
  <p class=MsoNormal><span style='font-family:"微软雅黑","sans-serif"'>不支持</span></p>
  </td>
  <td width=284 nowrap style='width:213.0pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:15.0pt'>
  <p class=MsoNormal><span style='font-family:"微软雅黑","sans-serif"'>支持</span></p>
  </td>
 </tr>
 <tr style='height:15.0pt'>
  <td width=159 nowrap style='width:119.0pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt;height:15.0pt'>
  <p class=MsoNormal><b><span style='font-family:"微软雅黑","sans-serif"'>按照时间回溯</span></b></p>
  </td>
  <td width=237 nowrap style='width:178.0pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:15.0pt'>
  <p class=MsoNormal><span style='font-family:"微软雅黑","sans-serif"'>不支持</span></p>
  </td>
  <td width=284 nowrap style='width:213.0pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:15.0pt'>
  <p class=MsoNormal><span style='font-family:"微软雅黑","sans-serif"'>支持</span></p>
  </td>
 </tr>
 <tr style='height:47.25pt'>
  <td width=159 nowrap style='width:119.0pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt;height:47.25pt'>
  <p class=MsoNormal><b><span lang=EN-US>Consumer</span></b><b><span
  style='font-family:"微软雅黑","sans-serif"'>订阅实时性</span></b></p>
  </td>
  <td width=237 style='width:178.0pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:47.25pt'>
  <p class=MsoNormal><span lang=EN-US>1</span><span style='font-family:"微软雅黑","sans-serif"'>、数据落盘后，才可被订阅</span><span
  lang=EN-US style='font-family:宋体'><br>
  </span><span lang=EN-US>2</span><span style='font-family:"微软雅黑","sans-serif"'>、</span><span
  lang=EN-US>Consumer Pull</span><span style='font-family:"微软雅黑","sans-serif"'>最大间隔时间</span></p>
  </td>
  <td width=284 style='width:213.0pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:47.25pt'>
  <p class=MsoNormal><span lang=EN-US>1</span><span style='font-family:"微软雅黑","sans-serif"'>、数据进入</span><span
  lang=EN-US>Broker</span><span style='font-family:"微软雅黑","sans-serif"'>就可以被订阅</span><span
  lang=EN-US style='font-family:宋体'><br>
  </span><span lang=EN-US>2</span><span style='font-family:"微软雅黑","sans-serif"'>、同样依赖</span><span
  lang=EN-US>Consumer Pull</span><span style='font-family:"微软雅黑","sans-serif"'>最大间隔时间</span></p>
  </td>
 </tr>
 <tr style='height:15.0pt'>
  <td width=159 nowrap style='width:119.0pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt;height:15.0pt'>
  <p class=MsoNormal><b><span style='font-family:"微软雅黑","sans-serif"'>异步刷盘实时性</span></b></p>
  </td>
  <td width=237 nowrap style='width:178.0pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:15.0pt'>
  <p class=MsoNormal><span style='font-family:"微软雅黑","sans-serif"'>按照条数与时间刷盘，实时性低</span></p>
  </td>
  <td width=284 nowrap style='width:213.0pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:15.0pt'>
  <p class=MsoNormal><span style='font-family:"微软雅黑","sans-serif"'>后台线程实时刷盘</span></p>
  </td>
 </tr>
 <tr style='height:15.0pt'>
  <td width=159 nowrap style='width:119.0pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt;height:15.0pt'>
  <p class=MsoNormal><b><span style='font-family:"微软雅黑","sans-serif"'>同步刷盘</span></b></p>
  </td>
  <td width=237 nowrap style='width:178.0pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:15.0pt'>
  <p class=MsoNormal><span style='font-family:"微软雅黑","sans-serif"'>不支持</span></p>
  </td>
  <td width=284 nowrap style='width:213.0pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:15.0pt'>
  <p class=MsoNormal><span style='font-family:"微软雅黑","sans-serif"'>支持，且性能接近异步刷盘</span></p>
  </td>
 </tr>
 <tr style='height:15.0pt'>
  <td width=159 nowrap style='width:119.0pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt;height:15.0pt'>
  <p class=MsoNormal><b><span style='font-family:"微软雅黑","sans-serif"'>异步复制</span></b></p>
  </td>
  <td width=237 nowrap style='width:178.0pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:15.0pt'>
  <p class=MsoNormal><span style='font-family:"微软雅黑","sans-serif"'>不支持</span></p>
  </td>
  <td width=284 nowrap style='width:213.0pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:15.0pt'>
  <p class=MsoNormal><span style='font-family:"微软雅黑","sans-serif"'>支持</span></p>
  </td>
 </tr>
</table>

</div>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc345873161"><span lang=EN-US>6.2<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Metaq</span></a><span style='font-family:"微软雅黑","sans-serif"'>是什么？</span></h2>

<p class=MsoNormal align=center style='text-align:center;page-break-after:avoid'><span
lang=EN-US><img border=0 width=680 height=413 src="design.files/image002.png"></span></p>

<p class=MsoCaption align=center style='text-align:center'><span
style='font-family:黑体'>图表</span> <span lang=EN-US>6</span><span lang=EN-US>&#8209;</span><span
lang=EN-US>1</span><span lang=EN-US> Metaq</span><span style='font-family:黑体'>是什么</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(1).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>是一个队列模型的消息中间件。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(2).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
lang=EN-US>Producer</span><span style='font-family:"微软雅黑","sans-serif"'>、</span><span
lang=EN-US>Consumer</span><span style='font-family:"微软雅黑","sans-serif"'>、队列都可以分布式。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(3).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
lang=EN-US>Producer</span><span style='font-family:"微软雅黑","sans-serif"'>向一些队列轮流发送消息，队列集合称为</span><span
lang=EN-US>Topic</span><span style='font-family:"微软雅黑","sans-serif"'>，</span><span
lang=EN-US>Consumer</span><span style='font-family:"微软雅黑","sans-serif"'>如果做广播消费，则一个</span><span
lang=EN-US>consumer</span><span style='font-family:"微软雅黑","sans-serif"'>实例消费这个</span><span
lang=EN-US>Topic</span><span style='font-family:"微软雅黑","sans-serif"'>对应的所有队列，如果做集群消费，则多个</span><span
lang=EN-US>Consumer</span><span style='font-family:"微软雅黑","sans-serif"'>实例平均消费这个</span><span
lang=EN-US>topic</span><span style='font-family:"微软雅黑","sans-serif"'>对应的队列集合。</span></p>

<h1><a name="_Toc345873162"><span lang=EN-US>7<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Metaq</span></a><span style='font-family:"微软雅黑","sans-serif"'>主要功能点实现细节</span></h1>

<h2><a name="_Toc345873163"><span lang=EN-US>7.1<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>单机如何实现</span><span
lang=EN-US>1</span></a><span style='font-family:"微软雅黑","sans-serif"'>万以上个队列</span></h2>

<p class=MsoNormal style='page-break-after:avoid'><span lang=EN-US><img
border=0 width=697 height=516 src="design.files/image003.png"></span></p>

<p class=MsoCaption align=center style='text-align:center'><span
style='font-family:黑体'>图表</span> <span lang=EN-US>7</span><span lang=EN-US>&#8209;</span><span
lang=EN-US>1</span><span lang=EN-US>Metaq</span><span style='font-family:黑体'>队列</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(1).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>所有数据单独存储到一个物理队列，完全顺序写，随机读。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(2).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"微软雅黑","sans-serif"'>对最终用户展现的队列实际只存储消息在物理队列的位置信息，并且串行方式刷盘。</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:"微软雅黑","sans-serif"'>这样做的好处如下：</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(1).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>队列轻量化，单个队列数据量非常少。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(2).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"微软雅黑","sans-serif"'>对磁盘的访问串行化，避免磁盘竟争，不会因为队列增加导致</span><span
lang=EN-US>IOWAIT</span><span style='font-family:"微软雅黑","sans-serif"'>增高。</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:"微软雅黑","sans-serif"'>每个方案都有缺点，它的缺点如下：</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(1).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>写虽然完全是顺序写，但是读却变成了完全的随机读。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(2).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"微软雅黑","sans-serif"'>读一条消息，会先读逻辑队列，再读物理队列，增加了开销。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(3).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"微软雅黑","sans-serif"'>要保证物理队列与逻辑队列完全的一致，增加了编程的复杂度。</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:"微软雅黑","sans-serif"'>以上缺点如何克服：</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(1).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>随机读，尽可能让读命中</span><span
lang=EN-US>PAGECACHE</span><span style='font-family:"微软雅黑","sans-serif"'>，减少</span><span
lang=EN-US>IO</span><span style='font-family:"微软雅黑","sans-serif"'>读操作，所以内存越大越好。如果系统中堆积的消息过多，读数据要访问磁盘会不会由于随机读导致系统性能急剧下降，答案是否定的。</span></p>

<p class=MsoListParagraph style='margin-left:63.0pt;text-indent:-21.0pt'><span
lang=EN-US>a)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>访问</span><span
lang=EN-US>PAGECACHE</span><span style='font-family:"微软雅黑","sans-serif"'>时，即使只访问</span><span
lang=EN-US>1k</span><span style='font-family:"微软雅黑","sans-serif"'>的消息，系统也会提前预读出更多数据，在下次读时，就可能命中内存。</span></p>

<p class=MsoListParagraph style='margin-left:63.0pt;text-indent:-21.0pt'><span
lang=EN-US>b)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>随机访问物理队列磁盘数据，系统</span><span
lang=EN-US>IO</span><span style='font-family:"微软雅黑","sans-serif"'>调度算法设置为</span><span
lang=EN-US>NOOP</span><span style='font-family:"微软雅黑","sans-serif"'>方式，会在一定程度上将完全的随机读变成顺序跳跃方式，而顺序跳跃方式读较完全的随机读性能会高</span><span
lang=EN-US>5</span><span style='font-family:"微软雅黑","sans-serif"'>倍以上，可参见以下针对各种</span><span
lang=EN-US>IO</span><span style='font-family:"微软雅黑","sans-serif"'>方式的性能数据。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt'><span lang=EN-US><a
href="http://stblog.baidu-tech.com/?p=851">http://stblog.baidu-tech.com/?p=851</a></span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:0cm'><span
style='font-family:"微软雅黑","sans-serif"'>另外</span><span lang=EN-US>4k</span><span
style='font-family:"微软雅黑","sans-serif"'>的消息在完全随机访问情况下，仍然可以达到</span><span
lang=EN-US>10000</span><span style='font-family:"微软雅黑","sans-serif"'>次每秒以上的读性能。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(2).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"微软雅黑","sans-serif"'>由于逻辑队列存储数据量极少，而且是顺序读，在</span><span
lang=EN-US>PAGECACHE</span><span style='font-family:"微软雅黑","sans-serif"'>预读作用下，逻辑队列的读性能几乎与内存一致，即使堆积情况下。所以可认为逻辑队列完全不会阻碍读性能。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(3).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"微软雅黑","sans-serif"'>物理队列中存储了所有的元信息，类似于</span><span
lang=EN-US>Mysql</span><span style='font-family:"微软雅黑","sans-serif"'>的</span><span
lang=EN-US>binlog</span><span style='font-family:"微软雅黑","sans-serif"'>，</span><span
lang=EN-US>Oracle</span><span style='font-family:"微软雅黑","sans-serif"'>的</span><span
lang=EN-US>redolog</span><span style='font-family:"微软雅黑","sans-serif"'>，所有只要有物理队列在，逻辑队列即使数据丢失，仍然可以恢复出来。</span></p>

<h2><a name="_Toc345873164"><span lang=EN-US>7.2<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>刷盘策略</span></a></h2>

<p class=MsoNormal style='text-indent:21.0pt'><span lang=EN-US>Metaq</span><span
style='font-family:"微软雅黑","sans-serif"'>的所有消息都是持久化的，先写入系统</span><span
lang=EN-US>PAGECACHE</span><span style='font-family:"微软雅黑","sans-serif"'>，然后刷盘，可以保证内存与磁盘都有一份数据，访问时，直接从内存读取。</span></p>

<h3><a name="_Toc345873165"><span lang=EN-US>7.2.1<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>异步刷盘</span></a></h3>

<p class=MsoNormal align=center style='text-align:center'><span lang=EN-US><img
border=0 width=139 height=418 src="design.files/image004.png"></span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:"微软雅黑","sans-serif"'>在有</span><span
lang=EN-US>RAID</span><span style='font-family:"微软雅黑","sans-serif"'>卡，</span><span
lang=EN-US>SAS 15000</span><span style='font-family:"微软雅黑","sans-serif"'>转磁盘测试顺序写文件，速度可以达到</span><span
lang=EN-US>200M</span><span style='font-family:"微软雅黑","sans-serif"'>每秒以上，而线上的网卡一般都为千兆网卡，写磁盘速度明显快于数据网络入口速度，那么是否可以做到写完内存就向用户返回，由后台线程刷盘呢？</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(1).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>由于磁盘速度大于网卡速度，那么刷盘的进度肯定可以跟上消息的写入速度。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(2).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"微软雅黑","sans-serif"'>万一由于此时系统压力过大，可能堆积消息，除了写入</span><span
lang=EN-US>IO</span><span style='font-family:"微软雅黑","sans-serif"'>，还有读取</span><span
lang=EN-US>IO</span><span style='font-family:"微软雅黑","sans-serif"'>，万一出现磁盘读取落后情况，会不会导致系统内存溢出，答案是否定的，原因如下：</span></p>

<p class=MsoListParagraph style='margin-left:63.0pt;text-indent:-21.0pt'><span
lang=EN-US>a)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>写入消息到</span><span
lang=EN-US>PAGECACHE</span><span style='font-family:"微软雅黑","sans-serif"'>时，如果内存不足，则尝试丢弃干净的</span><span
lang=EN-US>PAGE</span><span style='font-family:"微软雅黑","sans-serif"'>，腾出内存供新消息使用，策略是</span><span
lang=EN-US>LRU</span><span style='font-family:"微软雅黑","sans-serif"'>方式。</span></p>

<p class=MsoListParagraph style='margin-left:63.0pt;text-indent:-21.0pt'><span
lang=EN-US>b)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>如果干净页不足，此时写入</span><span
lang=EN-US>PAGECACHE</span><span style='font-family:"微软雅黑","sans-serif"'>会被阻塞，系统尝试刷盘部分数据，大约每次尝试</span><span
lang=EN-US>32</span><span style='font-family:"微软雅黑","sans-serif"'>个</span><span
lang=EN-US>PAGE</span><span style='font-family:"微软雅黑","sans-serif"'>，来找出更多干净</span><span
lang=EN-US>PAGE</span><span style='font-family:"微软雅黑","sans-serif"'>。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:0cm'><span
style='font-family:"微软雅黑","sans-serif"'>综上，内存溢出的情况不会出现。</span></p>

<h3><a name="_Toc345873166"><span lang=EN-US>7.2.2<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>同步刷盘</span></a></h3>

<p class=MsoNormal align=center style='text-align:center'><span lang=EN-US><img
border=0 width=201 height=418 src="design.files/image005.png"></span></p>

<p class=MsoNormal align=left style='text-align:left;text-indent:21.0pt'><span
style='font-family:"微软雅黑","sans-serif"'>同步刷盘与异步刷盘的唯一区别是异步刷盘写完</span><span
lang=EN-US>PAGECACHE</span><span style='font-family:"微软雅黑","sans-serif"'>直接返回，而同步刷盘需要等待刷盘完成才返回，同步刷盘流程如下：</span></p>

<p class=MsoListParagraph align=left style='margin-left:42.0pt;text-align:left;
text-indent:-21.0pt'><span lang=EN-US>(1).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>写入</span><span
lang=EN-US>PAGECACHE</span><span style='font-family:"微软雅黑","sans-serif"'>后，线程等待，通知刷盘线程刷盘。</span></p>

<p class=MsoListParagraph align=left style='margin-left:42.0pt;text-align:left;
text-indent:-21.0pt'><span lang=EN-US>(2).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>刷盘线程刷盘后，唤醒前端等待线程，可能是一批线程。</span></p>

<p class=MsoListParagraph align=left style='margin-left:42.0pt;text-align:left;
text-indent:-21.0pt'><span lang=EN-US>(3).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>前端等待线程向用户返回成功。</span></p>

<h2><a name="_Toc345873167"><span lang=EN-US>7.3<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>服务器消息过滤</span></a></h2>

<h3><a name="_Toc345873168"><span lang=EN-US>7.3.1<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>按照</span><span
lang=EN-US>Message Type</span></a><span style='font-family:"微软雅黑","sans-serif"'>过滤</span></h3>

<p class=MsoNormal style='text-indent:21.0pt'><span lang=EN-US>Metaq</span><span
style='font-family:"微软雅黑","sans-serif"'>的消息过滤方式有别于其他消息中间件，是在订阅时，再做过滤，先来看下逻辑队列的存储结构。</span></p>

<p class=MsoNormal align=center style='text-align:center;page-break-after:avoid'><span
lang=EN-US><img border=0 width=474 height=90 src="design.files/image006.png"></span></p>

<p class=MsoCaption align=center style='text-align:center'><span
style='font-family:黑体'>图表</span> <span lang=EN-US>7</span><span lang=EN-US>&#8209;</span><span
lang=EN-US>2</span><span style='font-family:黑体'>逻辑队列单个存储单元结构</span></p>

<p class=MsoListParagraph style='margin-left:42.05pt;text-indent:-21.0pt'><span
lang=EN-US>(1).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>在</span><span
lang=EN-US>Broker</span><span style='font-family:"微软雅黑","sans-serif"'>端进行</span><span
lang=EN-US>Message Type</span><span style='font-family:"微软雅黑","sans-serif"'>比对，先遍历逻辑队列，如果存储的</span><span
lang=EN-US>Message Type</span><span style='font-family:"微软雅黑","sans-serif"'>与订阅的</span><span
lang=EN-US>Message Type</span><span style='font-family:"微软雅黑","sans-serif"'>不符合，则跳过，继续比对下一个，符合则传输给</span><span
lang=EN-US>Consumer</span><span style='font-family:"微软雅黑","sans-serif"'>。注意：</span><span
lang=EN-US>Message Type</span><span style='font-family:"微软雅黑","sans-serif"'>是字符串形式，逻辑队列中存储的是其对应的</span><span
lang=EN-US>hashcode</span><span style='font-family:"微软雅黑","sans-serif"'>，比对时也是比对</span><span
lang=EN-US>hashcode</span><span style='font-family:"微软雅黑","sans-serif"'>。</span></p>

<p class=MsoListParagraph style='margin-left:42.05pt;text-indent:-21.0pt'><span
lang=EN-US>(2).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
lang=EN-US>Consumer</span><span style='font-family:"微软雅黑","sans-serif"'>收到过滤后的消息后，同样也要执行在</span><span
lang=EN-US>Broker</span><span style='font-family:"微软雅黑","sans-serif"'>端的操作，但是比对的是真实的</span><span
lang=EN-US>Message Type</span><span style='font-family:"微软雅黑","sans-serif"'>字符串，而不是</span><span
lang=EN-US>Hashcode</span><span style='font-family:"微软雅黑","sans-serif"'>。</span></p>

<p class=MsoNormal style='margin-left:21.0pt'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='margin-left:21.0pt'><span style='font-family:"微软雅黑","sans-serif"'>为什么过滤要这样做？</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(1).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Message Type</span><span style='font-family:
"微软雅黑","sans-serif"'>存储</span><span lang=EN-US>Hashcode</span><span
style='font-family:"微软雅黑","sans-serif"'>，是为了在逻辑队列定长方式存储，节约空间。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(2).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"微软雅黑","sans-serif"'>过滤过程中不会访问物理队列数据，可以保证堆积情况下也能高效过滤。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(3).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"微软雅黑","sans-serif"'>即使存在</span><span lang=EN-US>Hash</span><span
style='font-family:"微软雅黑","sans-serif"'>冲突，也可以在</span><span lang=EN-US>Consumer</span><span
style='font-family:"微软雅黑","sans-serif"'>端进行修正，保证万无一失。</span></p>

<h3><a name="_Toc345873169"><span lang=EN-US>7.3.2<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>按照</span><span
lang=EN-US>Message Tag</span></a><span style='font-family:"微软雅黑","sans-serif"'>过滤</span></h3>

<p class=MsoNormal><span style='font-family:"微软雅黑","sans-serif"'>暂时不支持。</span></p>

<h2><a name="_Toc345873170"><span lang=EN-US>7.4<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>消息查询</span></a></h2>

<h3><a name="_Toc345873171"><span lang=EN-US>7.4.1<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>按照</span><span
lang=EN-US>MessageId</span></a><span style='font-family:"微软雅黑","sans-serif"'>查询消息</span></h3>

<p class=MsoNormal align=center style='text-align:center;page-break-after:avoid'><span
lang=EN-US><img border=0 width=641 height=138 id="图片 4"
src="design.files/image007.png"></span></p>

<p class=MsoCaption align=center style='text-align:center'><span
style='font-family:黑体'>图表</span> <span lang=EN-US>7</span><span lang=EN-US>&#8209;</span><span
lang=EN-US>3</span><span lang=EN-US> Message Id</span><span style='font-family:
黑体'>组成</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span lang=EN-US>MsgId</span><span
style='font-family:"微软雅黑","sans-serif"'>总共</span><span lang=EN-US>20</span><span
style='font-family:"微软雅黑","sans-serif"'>字节，包含消息存储时间，消息存储主机地址，消息物理分区</span><span
lang=EN-US>offset</span><span style='font-family:"微软雅黑","sans-serif"'>。从</span><span
lang=EN-US>MsgId</span><span style='font-family:"微软雅黑","sans-serif"'>中解析出</span><span
lang=EN-US>server</span><span style='font-family:"微软雅黑","sans-serif"'>的地址和物理分区的偏移地址，然后按照存储格式所在位置消息</span><span
lang=EN-US>buffer</span><span style='font-family:"微软雅黑","sans-serif"'>解析成一个完整的消息。</span></p>

<h3><a name="_Toc345873172"><span lang=EN-US>7.4.2<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>按照时间查询队列</span><span
lang=EN-US>Offset</span></a></h3>

<p class=MsoNormal align=center style='text-align:center;page-break-after:avoid'><span
lang=EN-US><img border=0 width=688 height=423 id="图片 7"
src="design.files/image008.png"></span></p>

<p class=MsoCaption align=center style='text-align:center'><span
style='font-family:黑体'>图表</span> <span lang=EN-US>7</span><span lang=EN-US>&#8209;</span><span
lang=EN-US>4</span><span style='font-family:黑体'>逻辑队列组成</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:"微软雅黑","sans-serif"'>根据时间</span><span
lang=EN-US>Tn</span><span style='font-family:"微软雅黑","sans-serif"'>查找到对应的索引文件</span><span
lang=EN-US>Fn</span><span style='font-family:"微软雅黑","sans-serif"'>，索引文件在</span><span
lang=EN-US>metaq</span><span style='font-family:"微软雅黑","sans-serif"'>的内部存储结构中是有序排列的（按时间递增），因此当一个查询进来的时候首先根据查询的时间</span><span
lang=EN-US> Tn</span><span style='font-family:"微软雅黑","sans-serif"'>查找到所属的索引文件。例如：假设</span><span
lang=EN-US>T2&lt;Tn&lt;T3</span><span style='font-family:"微软雅黑","sans-serif"'>（</span><span
lang=EN-US>Tn</span><span style='font-family:"微软雅黑","sans-serif"'>对应的索引文件记做</span><span
lang=EN-US>Fn</span><span style='font-family:"微软雅黑","sans-serif"'>，</span><span
lang=EN-US>Tn</span><span style='font-family:"微软雅黑","sans-serif"'>是索引文件</span><span
lang=EN-US>Fn</span><span style='font-family:"微软雅黑","sans-serif"'>最后一次的修改时间），则</span><span
lang=EN-US>Tn</span><span style='font-family:"微软雅黑","sans-serif"'>时间对应的消息就应包含在索引文件</span><span
lang=EN-US>F3</span><span style='font-family:"微软雅黑","sans-serif"'>中。</span></p>

<p class=MsoNormal align=left style='text-align:left'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=center style='text-align:center;page-break-after:avoid'><span
lang=EN-US><img border=0 width=698 height=185 id="图片 10"
src="design.files/image009.jpg"></span></p>

<p class=MsoCaption align=center style='text-align:center'><span
style='font-family:黑体'>图表</span> <span lang=EN-US>7</span><span lang=EN-US>&#8209;</span><span
lang=EN-US>5</span><span lang=EN-US> </span><span style='font-family:黑体'>按照时间二分查找</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:"微软雅黑","sans-serif"'>二分遍历索引文件，查找到一个最接近的消息，同一个队列的消息是严格按照时间先后顺序入队，所以按照二分查找定位到一个消息的</span><span
lang=EN-US>offset</span><span style='font-family:"微软雅黑","sans-serif"'>时间复杂度为</span><span
lang=EN-US>O(logN)</span><span style='font-family:"微软雅黑","sans-serif"'>。例如：一个索引文件的大小为</span><span
lang=EN-US>8M</span><span style='font-family:"微软雅黑","sans-serif"'>，一条索引占</span><span
lang=EN-US>16</span><span style='font-family:"微软雅黑","sans-serif"'>字节，一个文件中总共的索引条数为</span><span
lang=EN-US>524288</span><span style='font-family:"微软雅黑","sans-serif"'>条，极端情况下最多遍历次数为</span><span
lang=EN-US>19</span><span style='font-family:"微软雅黑","sans-serif"'>，因为</span><span
lang=EN-US>query</span><span style='font-family:"微软雅黑","sans-serif"'>的时间精确到</span><span
lang=EN-US>ms</span><span style='font-family:"微软雅黑","sans-serif"'>，所以不命中的情况下会返回最接近的结果值。</span></p>

<h3><a name="_Toc345873173"><span lang=EN-US>7.4.3<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>按照</span><span
lang=EN-US>Message Key</span></a><span style='font-family:"微软雅黑","sans-serif"'>查询消息</span></h3>

<p class=MsoNormal align=center style='text-align:center;page-break-after:avoid'><span
lang=EN-US><img border=0 width=698 height=318 id="图片 15"
src="design.files/image010.png"></span></p>

<p class=MsoCaption align=center style='text-align:center'><span
style='font-family:黑体'>图表</span> <span lang=EN-US>7</span><span lang=EN-US>&#8209;</span><span
lang=EN-US>6</span><span style='font-family:黑体'>索引的逻辑结构，类似</span><span
lang=EN-US>HashMap</span><span style='font-family:黑体'>实现</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal align=center style='text-align:center;page-break-after:avoid'><span
lang=EN-US><img border=0 width=435 height=93 id="图片 18"
src="design.files/image011.png"></span></p>

<p class=MsoCaption align=center style='text-align:center'><span
style='font-family:黑体'>图表</span> <span lang=EN-US>7</span><span lang=EN-US>&#8209;</span><span
lang=EN-US>7</span><span style='font-family:黑体'>单个索引项的存储结构</span></p>

<p class=MsoNormal align=center style='text-align:center;page-break-after:avoid'><span
lang=EN-US><img border=0 width=445 height=554 id="图片 21"
src="design.files/image012.png"></span></p>

<p class=MsoCaption align=center style='text-align:center'><span
style='font-family:黑体'>图表</span> <span lang=EN-US>7</span><span lang=EN-US>&#8209;</span><span
lang=EN-US>8</span><span style='font-family:黑体'>每个索引文件的物理存储结构</span></p>

<p class=MsoListParagraph style='margin-left:18.0pt;text-indent:-18.0pt'><span
lang=EN-US>1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>根据查询的</span><span
lang=EN-US>key</span><span style='font-family:"微软雅黑","sans-serif"'>的</span><span
lang=EN-US>hashcode%slotNum</span><span style='font-family:"微软雅黑","sans-serif"'>得到具体的槽的位置（</span><span
lang=EN-US>slotNum</span><span style='font-family:"微软雅黑","sans-serif"'>是一个索引文件里面包含的最大槽的数目，例如图</span><span
lang=EN-US>7.4.3-1</span><span style='font-family:"微软雅黑","sans-serif"'>中所示</span><span
lang=EN-US>slotNum=5000000</span><span style='font-family:"微软雅黑","sans-serif"'>），索引的逻辑结构见图</span><span
lang=EN-US>7.4.3-1 </span><span style='font-family:"微软雅黑","sans-serif"'>。</span></p>

<p class=MsoListParagraph style='margin-left:18.0pt;text-indent:-18.0pt'><span
lang=EN-US>2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>根据</span><span
lang=EN-US>slotValue</span><span style='font-family:"微软雅黑","sans-serif"'>（</span><span
lang=EN-US>slot</span><span style='font-family:"微软雅黑","sans-serif"'>位置对应的值）查找到索引项列表的最后一项（倒序排列，</span><span
lang=EN-US>slotValue</span><span style='font-family:"微软雅黑","sans-serif"'>总是指向最新的一个索引项），索引项的存储结构见图</span><span
lang=EN-US>7.4.3-2 </span><span style='font-family:"微软雅黑","sans-serif"'>。</span></p>

<p class=MsoListParagraph style='margin-left:18.0pt;text-indent:-18.0pt'><span
lang=EN-US>3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>遍历索引项列表返回查询时间范围内的结果集（默认一次最大返回的</span><span
lang=EN-US>32</span><span style='font-family:"微软雅黑","sans-serif"'>条记录）</span></p>

<p class=MsoListParagraph style='margin-left:18.0pt;text-indent:-18.0pt'><span
lang=EN-US>4.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Hash</span><span style='font-family:"微软雅黑","sans-serif"'>冲突；寻找</span><span
lang=EN-US>key</span><span style='font-family:"微软雅黑","sans-serif"'>的</span><span
lang=EN-US>slot</span><span style='font-family:"微软雅黑","sans-serif"'>位置时相当于执行了两次散列函数，一次</span><span
lang=EN-US>key</span><span style='font-family:"微软雅黑","sans-serif"'>的</span><span
lang=EN-US>hash</span><span style='font-family:"微软雅黑","sans-serif"'>，一次</span><span
lang=EN-US>key</span><span style='font-family:"微软雅黑","sans-serif"'>的</span><span
lang=EN-US>hash</span><span style='font-family:"微软雅黑","sans-serif"'>值取模，因此这里存在两次冲突的情况；第一种，</span><span
lang=EN-US>key</span><span style='font-family:"微软雅黑","sans-serif"'>的</span><span
lang=EN-US>hash</span><span style='font-family:"微软雅黑","sans-serif"'>值不同但模数相同，此时查询的时候会在比较一次</span><span
lang=EN-US>key</span><span style='font-family:"微软雅黑","sans-serif"'>的</span><span
lang=EN-US>hash</span><span style='font-family:"微软雅黑","sans-serif"'>值（每个索引项保存了</span><span
lang=EN-US>key</span><span style='font-family:"微软雅黑","sans-serif"'>的</span><span
lang=EN-US>hash</span><span style='font-family:"微软雅黑","sans-serif"'>值），过滤掉</span><span
lang=EN-US>hash</span><span style='font-family:"微软雅黑","sans-serif"'>值不相等的项。第二种，</span><span
lang=EN-US>hash</span><span style='font-family:"微软雅黑","sans-serif"'>值相等但</span><span
lang=EN-US>key</span><span style='font-family:"微软雅黑","sans-serif"'>不等，出于性能的考虑冲突的检测放到客户端处理（</span><span
lang=EN-US>key</span><span style='font-family:"微软雅黑","sans-serif"'>的原始值是存储在消息文件中的，避免对数据文件的解析），客户端比较一次消息体的</span><span
lang=EN-US>key</span><span style='font-family:"微软雅黑","sans-serif"'>是否相同。</span></p>

<p class=MsoListParagraph style='margin-left:18.0pt;text-indent:-18.0pt'><span
lang=EN-US>5.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>存储；为了节省空间索引项中存储的时间是时间差值（存储时间</span><span
lang=EN-US>-</span><span style='font-family:"微软雅黑","sans-serif"'>开始时间，开始时间存储在索引文件头中），整个索引文件是定长的，结构也是固定的。索引文件存储结构参见图</span><span
lang=EN-US>7.4.3-3 </span><span style='font-family:"微软雅黑","sans-serif"'>。</span></p>

<h2><a name="_Toc345873174"><span lang=EN-US>7.5<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>HA</span></a><span style='font-family:"微软雅黑","sans-serif"'>，同步双写</span></h2>

<p class=MsoNormal><span style='font-family:"微软雅黑","sans-serif"'>暂时不支持。</span></p>

<h2><a name="_Toc345873175"><span lang=EN-US>7.6<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>HA</span></a><span style='font-family:"微软雅黑","sans-serif"'>，异步复制</span></h2>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:"微软雅黑","sans-serif"'>异步复制的实现思路非常简单，</span><span
lang=EN-US>Slave</span><span style='font-family:"微软雅黑","sans-serif"'>启动一个线程，不断从</span><span
lang=EN-US>Master</span><span style='font-family:"微软雅黑","sans-serif"'>拉取物理队列中的数据，然后在异步</span><span
lang=EN-US>build</span><span style='font-family:"微软雅黑","sans-serif"'>出逻辑队列数据结构。整个实现过程基本同</span><span
lang=EN-US>Mysql</span><span style='font-family:"微软雅黑","sans-serif"'>主从同步类似。</span></p>

<h2><a name="_Toc345873176"><span lang=EN-US>7.7<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>单个</span><span
lang=EN-US>JVM</span></a><span style='font-family:"微软雅黑","sans-serif"'>进程也能利用机器超大内存</span></h2>

<p class=MsoNormal align=center style='text-align:center;page-break-after:avoid'><span
lang=EN-US><img border=0 width=585 height=394 src="design.files/image013.png"></span></p>

<p class=MsoCaption align=center style='text-align:center'><span
style='font-family:黑体'>图表</span> <span lang=EN-US>7</span><span lang=EN-US>&#8209;</span><span
lang=EN-US>9</span><span style='font-family:黑体'>消息在系统中流转图</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(1).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Producer</span><span style='font-family:"微软雅黑","sans-serif"'>发送消息，消息从</span><span
lang=EN-US>socket</span><span style='font-family:"微软雅黑","sans-serif"'>进入</span><span
lang=EN-US>java</span><span style='font-family:"微软雅黑","sans-serif"'>堆。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(2).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
lang=EN-US>Producer</span><span style='font-family:"微软雅黑","sans-serif"'>发送消息，消息从</span><span
lang=EN-US>java</span><span style='font-family:"微软雅黑","sans-serif"'>堆转入</span><span
lang=EN-US>PAGACACHE</span><span style='font-family:"微软雅黑","sans-serif"'>，物理内存。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(3).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
lang=EN-US>Producer</span><span style='font-family:"微软雅黑","sans-serif"'>发送消息，由异步线程刷盘，消息从</span><span
lang=EN-US>PAGECACHE</span><span style='font-family:"微软雅黑","sans-serif"'>刷入磁盘。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(4).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp; </span></span><span
lang=EN-US>Consumer</span><span style='font-family:"微软雅黑","sans-serif"'>拉消息（正常消费），消息直接从</span><span
lang=EN-US>PAGECACHE</span><span style='font-family:"微软雅黑","sans-serif"'>（数据在物理内存）转入</span><span
lang=EN-US>socket</span><span style='font-family:"微软雅黑","sans-serif"'>，到达</span><span
lang=EN-US>consumer</span><span style='font-family:"微软雅黑","sans-serif"'>，不经过</span><span
lang=EN-US>java</span><span style='font-family:"微软雅黑","sans-serif"'>堆。这种消费场景最多，线上</span><span
lang=EN-US>96G</span><span style='font-family:"微软雅黑","sans-serif"'>物理内存，按照</span><span
lang=EN-US>1K</span><span style='font-family:"微软雅黑","sans-serif"'>消息算，可以在物理内存缓存</span><span
lang=EN-US>1</span><span style='font-family:"微软雅黑","sans-serif"'>亿条消息。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(5).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
lang=EN-US>Consumer</span><span style='font-family:"微软雅黑","sans-serif"'>拉消息（异常消费），消息直接从</span><span
lang=EN-US>PAGECACHE</span><span style='font-family:"微软雅黑","sans-serif"'>（数据在虚拟内存）转入</span><span
lang=EN-US>socket</span><span style='font-family:"微软雅黑","sans-serif"'>。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(6).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp; </span></span><span
lang=EN-US>Consumer</span><span style='font-family:"微软雅黑","sans-serif"'>拉消息（异常消费），由于</span><span
lang=EN-US>Socket</span><span style='font-family:"微软雅黑","sans-serif"'>访问了虚拟内存，产生缺页中断，此时会产生磁盘</span><span
lang=EN-US>IO</span><span style='font-family:"微软雅黑","sans-serif"'>，从磁盘</span><span
lang=EN-US>Load</span><span style='font-family:"微软雅黑","sans-serif"'>消息到</span><span
lang=EN-US>PAGECACHE</span><span style='font-family:"微软雅黑","sans-serif"'>，然后直接从</span><span
lang=EN-US>socket</span><span style='font-family:"微软雅黑","sans-serif"'>发出去。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(7).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"微软雅黑","sans-serif"'>同</span><span lang=EN-US>5</span><span
style='font-family:"微软雅黑","sans-serif"'>一致。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(8).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp; </span></span><span
style='font-family:"微软雅黑","sans-serif"'>同</span><span lang=EN-US>6</span><span
style='font-family:"微软雅黑","sans-serif"'>一致。</span></p>

<h2><a name="_Toc345873177"><span lang=EN-US>7.8<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>消息堆积问题解决办法</span></a></h2>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:"微软雅黑","sans-serif"'>前面提到衡量消息系统堆积能力的几个指标，现将</span><span
lang=EN-US>Metaq</span><span style='font-family:"微软雅黑","sans-serif"'>的堆积能力整理如下</span></p>

<p class=MsoNormal align=center style='text-align:center'><span
style='font-family:"微软雅黑","sans-serif"'>表格</span> <span
lang=EN-US>7</span><span lang=EN-US>&#8209;</span><span
lang=EN-US>1</span><span lang=EN-US>Metaq</span><span style='font-family:"微软雅黑","sans-serif"'>性能堆积指标</span></p>

<table class=MsoNormalTable border=0 cellspacing=0 cellpadding=0 width=696
 style='width:521.9pt;margin-left:4.7pt;border-collapse:collapse'>
 <tr style='height:21.75pt'>
  <td width=341 nowrap colspan=2 style='width:255.9pt;border:solid windowtext 1.0pt;
  border-right:solid black 1.0pt;background:#92D050;padding:0cm 5.4pt 0cm 5.4pt;
  height:21.75pt'>
  <p class=MsoNormal><span style='font-family:"微软雅黑","sans-serif"'>　</span></p>
  </td>
  <td width=355 nowrap style='width:266.0pt;border:solid windowtext 1.0pt;
  border-left:none;background:#92D050;padding:0cm 5.4pt 0cm 5.4pt;height:21.75pt'>
  <p class=MsoNormal><b><span style='font-family:"微软雅黑","sans-serif"'>堆积性能指标</span></b></p>
  </td>
 </tr>
 <tr style='height:16.5pt'>
  <td width=22 nowrap style='width:16.4pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt;height:16.5pt'>
  <p class=MsoNormal><span lang=EN-US>1</span></p>
  </td>
  <td width=319 nowrap style='width:239.5pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:16.5pt'>
  <p class=MsoNormal><b><span style='font-family:"微软雅黑","sans-serif"'>消息的堆积容量</span></b></p>
  </td>
  <td width=355 nowrap style='width:266.0pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:16.5pt'>
  <p class=MsoNormal><span style='font-family:"微软雅黑","sans-serif"'>依赖磁盘大小</span></p>
  </td>
 </tr>
 <tr style='height:33.0pt'>
  <td width=22 nowrap style='width:16.4pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt;height:33.0pt'>
  <p class=MsoNormal><span lang=EN-US>2</span></p>
  </td>
  <td width=319 nowrap style='width:239.5pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:33.0pt'>
  <p class=MsoNormal><b><span style='font-family:"微软雅黑","sans-serif"'>发消息的吞吐量大小受影响程度</span></b></p>
  </td>
  <td width=355 style='width:266.0pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:33.0pt'>
  <p class=MsoNormal><span style='font-family:"微软雅黑","sans-serif"'>无</span><span
  lang=EN-US>SLAVE</span><span style='font-family:"微软雅黑","sans-serif"'>情况，会受一定影响</span><span
  lang=EN-US><br>
  </span><span style='font-family:"微软雅黑","sans-serif"'>有</span><span
  lang=EN-US>SLAVE</span><span style='font-family:"微软雅黑","sans-serif"'>情况，不受影响</span></p>
  </td>
 </tr>
 <tr style='height:33.0pt'>
  <td width=22 nowrap style='width:16.4pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt;height:33.0pt'>
  <p class=MsoNormal><span lang=EN-US>3</span></p>
  </td>
  <td width=319 nowrap style='width:239.5pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:33.0pt'>
  <p class=MsoNormal><b><span style='font-family:"微软雅黑","sans-serif"'>正常消费的</span><span
  lang=EN-US>Consumer</span></b><b><span style='font-family:"微软雅黑","sans-serif"'>是否会受影响</span></b></p>
  </td>
  <td width=355 style='width:266.0pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:33.0pt'>
  <p class=MsoNormal><span style='font-family:"微软雅黑","sans-serif"'>无</span><span
  lang=EN-US>SLAVE</span><span style='font-family:"微软雅黑","sans-serif"'>情况，会受一定影响</span><span
  lang=EN-US><br>
  </span><span style='font-family:"微软雅黑","sans-serif"'>有</span><span
  lang=EN-US>SLAVE</span><span style='font-family:"微软雅黑","sans-serif"'>情况，不受影响</span></p>
  </td>
 </tr>
 <tr style='height:49.5pt'>
  <td width=22 nowrap style='width:16.4pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt;height:49.5pt'>
  <p class=MsoNormal><span lang=EN-US>4</span></p>
  </td>
  <td width=319 nowrap style='width:239.5pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:49.5pt'>
  <p class=MsoNormal><b><span style='font-family:"微软雅黑","sans-serif"'>访问堆积在磁盘的消息时，吞吐量有多大</span></b></p>
  </td>
  <td width=355 style='width:266.0pt;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:49.5pt'>
  <p class=MsoNormal><span lang=EN-US>1</span><span style='font-family:"微软雅黑","sans-serif"'>、</span><span
  lang=EN-US>1K</span><span style='font-family:"微软雅黑","sans-serif"'>大小左右消息堆积情况下吞吐量非常高，</span><span
  lang=EN-US><br>
  </span><span style='font-family:"微软雅黑","sans-serif"'>在</span><span
  lang=EN-US>5W</span><span style='font-family:"微软雅黑","sans-serif"'>每秒以上。</span><span
  lang=EN-US><br>
  2</span><span style='font-family:"微软雅黑","sans-serif"'>、</span><span
  lang=EN-US>4K</span><span style='font-family:"微软雅黑","sans-serif"'>消息性能最差，</span><span
  lang=EN-US>1W</span><span style='font-family:"微软雅黑","sans-serif"'>每秒左右。</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='text-indent:21.0pt'><span style='font-family:"微软雅黑","sans-serif"'>在有</span><span
lang=EN-US>Slave</span><span style='font-family:"微软雅黑","sans-serif"'>情况下，</span><span
lang=EN-US>Master</span><span style='font-family:"微软雅黑","sans-serif"'>一旦发现</span><span
lang=EN-US>Consumer</span><span style='font-family:"微软雅黑","sans-serif"'>访问堆积在磁盘的数据时，会向</span><span
lang=EN-US>Consumer</span><span style='font-family:"微软雅黑","sans-serif"'>下达一个重定向指令，令</span><span
lang=EN-US>Consumer</span><span style='font-family:"微软雅黑","sans-serif"'>从</span><span
lang=EN-US>Slave</span><span style='font-family:"微软雅黑","sans-serif"'>拉取数据，这样正常的发消息与正常消费的</span><span
lang=EN-US>Consumer</span><span style='font-family:"微软雅黑","sans-serif"'>都不会因为消息堆积受影响，因为系统将堆积场景与非堆积场景分割在了两个不同的节点处理。这里会产生另一个问题，</span><span
lang=EN-US>Slave</span><span style='font-family:"微软雅黑","sans-serif"'>会不会写性能下降，答案是否定的。因为</span><span
lang=EN-US>Slave</span><span style='font-family:"微软雅黑","sans-serif"'>的消息写入只追求吞吐量，不追求实时性，只要整体的吞吐量高就可以，而</span><span
lang=EN-US>Slave</span><span style='font-family:"微软雅黑","sans-serif"'>每次都是从</span><span
lang=EN-US>Master</span><span style='font-family:"微软雅黑","sans-serif"'>拉取一批数据，如</span><span
lang=EN-US>1M</span><span style='font-family:"微软雅黑","sans-serif"'>，这种批量顺序写入方式即使堆积情况，整体吞吐量影响相对较小，只是写入</span><span
lang=EN-US>RT</span><span style='font-family:"微软雅黑","sans-serif"'>会变长。</span></p>

<h1><a name="_Toc345873178"><span lang=EN-US>8<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Metaq</span></a><span style='font-family:"微软雅黑","sans-serif"'>开发过程中遇到了哪些问题？</span></h1>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(1).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>分配</span><span
lang=EN-US>MapedFile</span><span style='font-family:"微软雅黑","sans-serif"'>有时耗时很长，长达几百毫秒，在性能压测过程中，会大大拉低整体性能。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:0cm'><span
style='font-family:"微软雅黑","sans-serif"'>解决办法：采用预分配方式，这样前端请求就不会因为分配</span><span
lang=EN-US>MapedFile</span><span style='font-family:"微软雅黑","sans-serif"'>而阻塞。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(2).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"微软雅黑","sans-serif"'>删除单个</span><span lang=EN-US>1G</span><span
style='font-family:"微软雅黑","sans-serif"'>文件耗时达</span><span lang=EN-US>1</span><span
style='font-family:"微软雅黑","sans-serif"'>秒以上，导致写消息性能下降</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:0cm'><span
style='font-family:"微软雅黑","sans-serif"'>解决办法：在</span><span lang=EN-US>ext3</span><span
style='font-family:"微软雅黑","sans-serif"'>下，删除文件确实耗时较长，使用</span><span lang=EN-US>ext4</span><span
style='font-family:"微软雅黑","sans-serif"'>文件系统，删除</span><span lang=EN-US>1G</span><span
style='font-family:"微软雅黑","sans-serif"'>文件通常耗时几十毫秒。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(3).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
lang=EN-US>Consumer</span><span style='font-family:"微软雅黑","sans-serif"'>抢分区会存在失败的情况，原因是写入</span><span
lang=EN-US>ZK</span><span style='font-family:"微软雅黑","sans-serif"'>节点失败</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:0cm'><span
style='font-family:"微软雅黑","sans-serif"'>解决办法：去除抢这个概念，所有</span><span lang=EN-US>Consumer</span><span
style='font-family:"微软雅黑","sans-serif"'>按照同样的算法进行分配，最终一致。</span></p>

<h1><a name="_Toc345873179"><span lang=EN-US>9<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Metaq</span></a><span style='font-family:"微软雅黑","sans-serif"'>目前有哪些地方需要改进？</span></h1>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(1).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>异步复制仍然不能完全避免单点，会被用户诟病，需要尝试同步双写。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(2).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"微软雅黑","sans-serif"'>消息过滤功能较简单，是否可以支持像</span><span
lang=EN-US>Notify</span><span style='font-family:"微软雅黑","sans-serif"'>一样的高级过滤方式</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(3).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-family:"微软雅黑","sans-serif"'>对</span><span lang=EN-US>Zookeeper</span><span
style='font-family:"微软雅黑","sans-serif"'>强依赖问题。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>(4).<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp; </span></span><span
style='font-family:"微软雅黑","sans-serif"'>客户端</span><span lang=EN-US>API</span><span
style='font-family:"微软雅黑","sans-serif"'>其实可以更友好。</span></p>

<h1><a name="_Toc345873180"><span lang=EN-US>10<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Metaq</span></a><span style='font-family:"微软雅黑","sans-serif"'>的几个设计原则</span></h1>

<p class=MsoNormal style='text-indent:21.0pt'><span lang=EN-US>Metaq</span><span
style='font-family:"微软雅黑","sans-serif"'>在开发过程中，遵循以下设计原则，有些观点为个人看法，不一定对所有产品都适用，或者不一定正确，写出来仅供各位参考。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>消息都是持久化的，内存与磁盘各一份。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>高性能离不开异步，异步离不开队列，无论是构建整个系统还是构建单个程序都适用</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>磁盘</span><span
lang=EN-US>IO</span><span style='font-family:"微软雅黑","sans-serif"'>，网络</span><span
lang=EN-US>IO</span><span style='font-family:"微软雅黑","sans-serif"'>尽可能的批量处理。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>4.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>如果操作系统的层面已经提供的功能，或者优化过的性能点，尽可能交给操作系统处理</span><span
lang=EN-US>.</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>5.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>与</span><span
lang=EN-US>IO</span><span style='font-family:"微软雅黑","sans-serif"'>相关部分尽可能用单线程处理，避免使用多线程。一个功能尽可能拆分成几个独立的子功能，每个功能有专门的线程来执行。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>6.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>一个线程只做一件事情，并做好。因为目前的计算机</span><span
lang=EN-US>CPU</span><span style='font-family:"微软雅黑","sans-serif"'>资源足够强大，即使是单个</span><span
lang=EN-US>CPU</span><span style='font-family:"微软雅黑","sans-serif"'>也运算能力足够快。如果一个线程没有阻塞的地方，使用多线程并不能提升性能，反而会下降，如果有阻塞地方，可酌情使用多线程，但也要分场景。</span></p>

<p class=MsoListParagraph style='margin-left:42.0pt;text-indent:-21.0pt'><span
lang=EN-US>7.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-family:"微软雅黑","sans-serif"'>为追求高性能，牺牲了某些消息系统中特有的高级功能，例如消息优先级、分布式事务等。</span></p>

</div>

<b><span lang=EN-US style='font-size:16.0pt;line-height:173%;font-family:"Cambria","serif"'><br
clear=all style='page-break-before:always'>
</span></b>

<div class=WordSection4 style='layout-grid:15.6pt'>

<h1 style='margin-left:0cm;text-indent:0cm'><a name="_Toc345873181"><span
style='font-family:"微软雅黑","sans-serif"'>附录</span><span lang=EN-US>A </span></a><span
style='font-family:"微软雅黑","sans-serif"'>参考文档、规范</span></h1>

<p class=MsoListParagraph style='margin-left:21.0pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>n<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span lang=EN-US>Java Message Service API Tutorial</span></p>

<p class=MsoListParagraph style='margin-left:21.0pt;text-indent:0cm'><span
lang=EN-US><a
href="http://docs.oracle.com/javaee/1.3/jms/tutorial/1_3_1-fcs/doc/jms_tutorialTOC.html">http://docs.oracle.com/javaee/1.3/jms/tutorial/1_3_1-fcs/doc/jms_tutorialTOC.html</a></span></p>

<p class=MsoListParagraph style='margin-left:21.0pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>n<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span lang=EN-US>Java(TM) Message Service Specification Final
Release 1.1</span></p>

<p class=MsoListParagraph style='margin-left:21.0pt;text-indent:0cm'><span
lang=EN-US><a href="http://www.oracle.com/technetwork/java/docs-136352.html">http://www.oracle.com/technetwork/java/docs-136352.html</a></span></p>

<p class=MsoListParagraph style='margin-left:21.0pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>n<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span lang=EN-US>CORBA Notification Service Specification 1.1</span></p>

<p class=MsoListParagraph style='margin-left:21.0pt;text-indent:0cm'><span
lang=EN-US><a href="http://www.omg.org/spec/NOT/1.1/PDF">http://www.omg.org/spec/NOT/1.1/PDF</a></span></p>

<p class=MsoListParagraph style='margin-left:21.0pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>n<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span lang=EN-US>Distributed Transaction Processing: The XA
Specification</span></p>

<p class=MsoListParagraph style='margin-left:21.0pt;text-indent:0cm'><span
lang=EN-US><a href="http://pubs.opengroup.org/onlinepubs/009680699/toc.pdf">http://pubs.opengroup.org/onlinepubs/009680699/toc.pdf</a></span></p>

<p class=MsoListParagraph style='margin-left:21.0pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>n<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span lang=EN-US>Metaq Benchmark</span></p>

<p class=MsoListParagraph style='margin-left:21.0pt;text-indent:0cm'><span
lang=EN-US><a
href="http://taobao.github.com/metaq/document/benchmark/benchmark.pdf">http://taobao.github.com/metaq/document/benchmark/benchmark.pdf</a></span></p>

<p class=MsoListParagraph style='margin-left:21.0pt;text-indent:-21.0pt'><span
lang=EN-US style='font-family:Wingdings'>n<span style='font:7.0pt "Times New Roman"'>&nbsp;
</span></span><span lang=EN-US>Documentation for /proc/sys/vm/*</span></p>

<p class=MsoListParagraph style='margin-left:21.0pt;text-indent:0cm'><span
lang=EN-US><a href="http://www.kernel.org/doc/Documentation/sysctl/vm.txt">http://www.kernel.org/doc/Documentation/sysctl/vm.txt</a></span></p>

<p class=MsoListParagraph style='margin-left:21.0pt;text-indent:0cm'><span
lang=EN-US>&nbsp;</span></p>

</div>

</body>

</html>
